<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:C_Cpp="http://www.eclipse.org/papyrus/C_Cpp/1" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:standard="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML">
  <uml:Model xmi:id="_MtKRAEezEequRo9-mziKbQ" name="cmopo">
    <packagedElement xmi:type="uml:Package" xmi:id="_Mw_oIEezEequRo9-mziKbQ" name="Include">
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_MxDSgEezEequRo9-mziKbQ" name="METHODS"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_M2qyUEezEequRo9-mziKbQ" name="HANDLERSTYPES"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_M2yuIEezEequRo9-mziKbQ" name="Result"/>
      <packagedElement xmi:type="uml:Class" xmi:id="_M29tQEezEequRo9-mziKbQ" name="IpAddress">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_M2-7YEezEequRo9-mziKbQ" name="Any" visibility="public" isStatic="true" type="_M29tQEezEequRo9-mziKbQ" aggregation="composite" association="_M3f4wEezEequRo9-mziKbQ">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_NgYdsEezEequRo9-mziKbQ" name="defaultValue" type="_M29tQEezEequRo9-mziKbQ">
            <language>C++</language>
            <body>IpAddress()</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_M3iVAEezEequRo9-mziKbQ" name="Loopback" visibility="public" isStatic="true" type="_M29tQEezEequRo9-mziKbQ" aggregation="composite" association="_M3i8EEezEequRo9-mziKbQ">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_NgYdsUezEequRo9-mziKbQ" name="defaultValue" type="_M29tQEezEequRo9-mziKbQ">
            <language>C++</language>
            <body>IpAddress(127, 0, 0, 1)</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_M45m8EezEequRo9-mziKbQ" name="m_Address" visibility="public" aggregation="composite" association="_M461EEezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_a1wZUByeEduyofBvg4RL2w"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M4TxEEezEequRo9-mziKbQ" name="IpAddress" specification="_M3kKMEezEequRo9-mziKbQ" isReentrant="false">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M4josEezEequRo9-mziKbQ" name="IpAddress" specification="_M4VmQEezEequRo9-mziKbQ" isReentrant="false">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_M40ucUezEequRo9-mziKbQ" name="IpAddress" specification="_M4josUezEequRo9-mziKbQ" isReentrant="false">
          <language>C++</language>
          <body>		m_Address = (((unsigned long)a) &lt;&lt; 24) |
					(((unsigned long)b) &lt;&lt; 16) |
					(((unsigned long)c) &lt;&lt; 8) |
					(((unsigned long)d));
</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M3kKMEezEequRo9-mziKbQ" name="IpAddress" visibility="public" method="_M4TxEEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M4VmQEezEequRo9-mziKbQ" name="IpAddress" visibility="public" method="_M4josEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M4diEEezEequRo9-mziKbQ" name="address">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_a1wZUByeEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M4josUezEequRo9-mziKbQ" name="IpAddress" visibility="public" method="_M40ucUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M4wdAEezEequRo9-mziKbQ" name="a">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_YYWiwByeEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M4xrIEezEequRo9-mziKbQ" name="b">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_YYWiwByeEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M4zgUEezEequRo9-mziKbQ" name="c">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_YYWiwByeEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M40ucEezEequRo9-mziKbQ" name="d">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_YYWiwByeEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_M3f4wEezEequRo9-mziKbQ" name="A_Any_ipAddress" memberEnd="_M2-7YEezEequRo9-mziKbQ _M3gf0EezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_M3gf0EezEequRo9-mziKbQ" name="ipAddress" type="_M29tQEezEequRo9-mziKbQ" association="_M3f4wEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M3hG4EezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M3ht8EezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_M3i8EEezEequRo9-mziKbQ" name="A_Loopback_ipAddress" memberEnd="_M3iVAEezEequRo9-mziKbQ _M3jjIEezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_M3jjIEezEequRo9-mziKbQ" name="ipAddress" type="_M29tQEezEequRo9-mziKbQ" association="_M3i8EEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M3jjIUezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M3jjIkezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_M461EEezEequRo9-mziKbQ" name="A_m_Address_ipAddress" memberEnd="_M45m8EezEequRo9-mziKbQ _M461EUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_M461EUezEequRo9-mziKbQ" name="ipAddress" type="_M29tQEezEequRo9-mziKbQ" association="_M461EEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_M461EkezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_M461E0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_M4_tkEezEequRo9-mziKbQ" name="IHTTPHandler" isAbstract="true">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NDGEwUezEequRo9-mziKbQ" name="m_segment" visibility="protected" aggregation="composite" association="_NDKWMEezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NDK9QEezEequRo9-mziKbQ" name="m_methodsSupportMask" visibility="protected" type="_MxDSgEezEequRo9-mziKbQ" aggregation="composite" association="_NDK9QUezEequRo9-mziKbQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Niq8sEezEequRo9-mziKbQ" name="~IHTTPHandler" specification="_M5Z9QUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO_1( &quot;## destroyer  %s  &quot;, m_segment);</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NitY8EezEequRo9-mziKbQ" name="IHTTPHandler" specification="_M4_tkUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	memset(m_segment, 0, sizeof(HTTP_MAX_SEGMENT_LENGTH));
	NPT_CopyMemory(m_segment, segment, strlen(segment));
	NPT_LOG_INFO_1( &quot;## constructing  %s  &quot;, m_segment);</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Niv1MEezEequRo9-mziKbQ" name="IHTTPHandler" specification="_M5IQckezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	memset(m_segment, 0, sizeof(HTTP_MAX_SEGMENT_LENGTH));
	NPT_LOG_INFO_1( &quot;## constructing  %s  &quot;, m_segment);</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NiwcQEezEequRo9-mziKbQ" name="getSegment" specification="_NB05cEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	return m_segment;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NiwcQUezEequRo9-mziKbQ" name="getMethods" specification="_NCEKAEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	return m_methodsSupportMask;</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M4_tkUezEequRo9-mziKbQ" name="IHTTPHandler" visibility="public" method="_NitY8EezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M5FNIEezEequRo9-mziKbQ" name="segment">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M5IQcEezEequRo9-mziKbQ" name="methodsSupportMask" type="_MxDSgEezEequRo9-mziKbQ">
            <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_M5IQcUezEequRo9-mziKbQ" name="default" type="_MxDSgEezEequRo9-mziKbQ">
              <language>C++</language>
              <body>SUPPORT_NONE</body>
            </defaultValue>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M5IQckezEequRo9-mziKbQ" name="IHTTPHandler" visibility="public" method="_Niv1MEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M5PlMEezEequRo9-mziKbQ" name="methodsSupportMask" type="_MxDSgEezEequRo9-mziKbQ">
            <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_M5QMQEezEequRo9-mziKbQ" name="default" type="_MxDSgEezEequRo9-mziKbQ">
              <language>C++</language>
              <body>SUPPORT_NONE</body>
            </defaultValue>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M5QMQUezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" isAbstract="true">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M5Z9QEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M5Z9QUezEequRo9-mziKbQ" name="~IHTTPHandler" visibility="public" method="_Niq8sEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M5juQUezEequRo9-mziKbQ" name="OnCreate" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NALToUezEequRo9-mziKbQ" name="request" type="_NAIQUUezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NARaQUezEequRo9-mziKbQ" name="context" type="_NAPlEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NAkVMUezEequRo9-mziKbQ" name="response" type="_NAigAEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NAmKYUezEequRo9-mziKbQ" name="OnRead" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NA2CAEezEequRo9-mziKbQ" name="request" type="_NAIQUUezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NA_zAEezEequRo9-mziKbQ" name="context" type="_NAPlEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NBIV4EezEequRo9-mziKbQ" name="response" type="_NAigAEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NBKLEEezEequRo9-mziKbQ" name="OnUpdate" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NBWYUEezEequRo9-mziKbQ" name="request" type="_NAIQUUezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NBaCsEezEequRo9-mziKbQ" name="context" type="_NAPlEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NBe7MEezEequRo9-mziKbQ" name="response" type="_NAigAEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NBgJUUezEequRo9-mziKbQ" name="OnDelete" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NBp6UEezEequRo9-mziKbQ" name="request" type="_NAIQUUezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NBs9oEezEequRo9-mziKbQ" name="context" type="_NAPlEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NBzEQEezEequRo9-mziKbQ" name="response" type="_NAigAEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NB05cEezEequRo9-mziKbQ" name="getSegment" visibility="public" method="_NiwcQEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NCBtwEezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NCEKAEezEequRo9-mziKbQ" name="getMethods" visibility="public" method="_NiwcQUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NCIbcEezEequRo9-mziKbQ" name="ret" type="_MxDSgEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NCIbcUezEequRo9-mziKbQ" name="ServeFile" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NCKQoEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NCWd4EezEequRo9-mziKbQ" name="request" type="_NAIQUUezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NCtqQEezEequRo9-mziKbQ" name="context" type="_NAPlEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NC0_AEezEequRo9-mziKbQ" name="response" type="_NAigAEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NC4CUEezEequRo9-mziKbQ" name="file_path">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NDBzUEezEequRo9-mziKbQ" name="mime_type">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_M_BdEEezEequRo9-mziKbQ" name="ICServer" isAbstract="true">
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M_BdEUezEequRo9-mziKbQ" name="StartServer" visibility="public" isAbstract="true">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_IKwEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M_Ix0EezEequRo9-mziKbQ" name="Stop" visibility="public" isAbstract="true">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_QGkEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M_QGkUezEequRo9-mziKbQ" name="setRoot" visibility="public" isAbstract="true">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_ewEEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_fXIEezEequRo9-mziKbQ" name="treeHandler" type="_M4_tkEezEequRo9-mziKbQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_M_pvMEezEequRo9-mziKbQ" name="CSFactory">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NAA7kUezEequRo9-mziKbQ" name="m_instance" visibility="private" isStatic="true" type="_M_pvMEezEequRo9-mziKbQ" aggregation="composite" association="_NABioEezEequRo9-mziKbQ">
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_NlHzwEezEequRo9-mziKbQ" name="defaultValue" type="_M_pvMEezEequRo9-mziKbQ">
            <language>C++</language>
            <body>CSFactory()</body>
          </defaultValue>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NlHzwUezEequRo9-mziKbQ" name="getCServer" specification="_M_pvMUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	HTTPServer * srv = new HTTPServer(NPT_IpAddress(listen_address.m_Address),
								  (NPT_UInt16) listen_port,
								  (NPT_UInt16) max_threads_workers);
	NPT_LOG_INFO(&quot;Server Created &quot;);
	// todo ; need to save it in array ?
	return srv;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NlKQAEezEequRo9-mziKbQ" name="CSFactory" specification="_M_4_wEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO(&quot;CSFactory Created &quot;);</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NlKQAUezEequRo9-mziKbQ" name="~CSFactory" specification="_M_8DEUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO(&quot;CSFactory destroyed &quot;);</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NlK3EEezEequRo9-mziKbQ" name="Instance" specification="_M_y5IUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>    return m_instance;</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M_pvMUezEequRo9-mziKbQ" name="getCServer" visibility="public" method="_NlHzwUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_tZkEezEequRo9-mziKbQ" name="ret" type="_M_BdEEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_vOwUezEequRo9-mziKbQ" name="listen_address" type="_M29tQEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_xrAEezEequRo9-mziKbQ" name="listen_port">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_V5vyUByeEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_y5IEezEequRo9-mziKbQ" name="max_threads_workers">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_V5vyUByeEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M_y5IUezEequRo9-mziKbQ" name="Instance" visibility="public" isStatic="true" method="_NlK3EEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_M_0uUEezEequRo9-mziKbQ" name="ret" type="_M_pvMEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M_4_wEezEequRo9-mziKbQ" name="CSFactory" visibility="private" method="_NlKQAEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_M_8DEUezEequRo9-mziKbQ" name="~CSFactory" visibility="private" method="_NlKQAUezEequRo9-mziKbQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NABioEezEequRo9-mziKbQ" name="A_m_instance_cSFactory" memberEnd="_NAA7kUezEequRo9-mziKbQ _NABioUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NABioUezEequRo9-mziKbQ" name="cSFactory" type="_M_pvMEezEequRo9-mziKbQ" association="_NABioEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NABiokezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NABio0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NDKWMEezEequRo9-mziKbQ" name="A_m_segment_iHTTPHandler" memberEnd="_NDGEwUezEequRo9-mziKbQ _NDKWMUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NDKWMUezEequRo9-mziKbQ" name="iHTTPHandler" type="_M4_tkEezEequRo9-mziKbQ" association="_NDKWMEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NDKWMkezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NDKWM0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NDK9QUezEequRo9-mziKbQ" name="A_m_methodsSupportMask_iHTTPHandler" memberEnd="_NDK9QEezEequRo9-mziKbQ _NDK9QkezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NDK9QkezEequRo9-mziKbQ" name="iHTTPHandler" type="_M4_tkEezEequRo9-mziKbQ" association="_NDK9QUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NDK9Q0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NDK9REezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NlJo8EezEequRo9-mziKbQ" client="_M_pvMEezEequRo9-mziKbQ" supplier="_NNA1wEezEequRo9-mziKbQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_NAF0EEezEequRo9-mziKbQ" name="external">
      <packagedElement xmi:type="uml:DataType" xmi:id="_NAIQUUezEequRo9-mziKbQ" name=":: NPT_HttpRequest"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NAPlEEezEequRo9-mziKbQ" name=":: NPT_HttpRequestContext"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NAigAEezEequRo9-mziKbQ" name=":: NPT_HttpResponse"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NMJTEEezEequRo9-mziKbQ" name=":: NPT_String"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NMc1EEezEequRo9-mziKbQ" name="NPT_Cardinal"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NMsFoEezEequRo9-mziKbQ" name="NPT_Result"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NM3r0EezEequRo9-mziKbQ" name="NPT_List&lt;HTTPNode>"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NM79QEezEequRo9-mziKbQ" name="NPT_HttpRequestHandler"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NRfGEEezEequRo9-mziKbQ" name=":: NPT_IpAddress"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NRhiUEezEequRo9-mziKbQ" name=":: NPT_UInt16"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NUhL8EezEequRo9-mziKbQ" name=":: NPT_InputStreamReference"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NUkPQEezEequRo9-mziKbQ" name=":: NPT_OutputStreamReference"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NVCwYEezEequRo9-mziKbQ" name="NPT_InputStreamReference"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NVElkEezEequRo9-mziKbQ" name="NPT_OutputStreamReference"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NVGawEezEequRo9-mziKbQ" name="NPT_HttpRequestContext"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NVJeEUezEequRo9-mziKbQ" name="NPT_SharedVariable"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NVO9oEezEequRo9-mziKbQ" name="NPT_Thread"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NVWSYEezEequRo9-mziKbQ" name=":: NPT_List &lt; NPT_String >"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NYVU8EezEequRo9-mziKbQ" name="NPT_List &lt; NPT_String >"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NYzPAkezEequRo9-mziKbQ" name="NPT_Mutex"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NY1rQEezEequRo9-mziKbQ" name="NPT_List&lt;HTTPServerTaskData>"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NY4ukEezEequRo9-mziKbQ" name="NPT_List&lt;HTTPServerTask>"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NY-OIEezEequRo9-mziKbQ" name="NPT_HttpServer"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NbsK8EezEequRo9-mziKbQ" name="NPT_HttpRequest"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NnWBUEezEequRo9-mziKbQ" name="NPT_List &lt; HTTPNode >"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NptY0EezEequRo9-mziKbQ" name="NPT_AutoLock"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NtklIEezEequRo9-mziKbQ" name="NPT_HttpResponse"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NtoPgEezEequRo9-mziKbQ" name="NPT_HttpResponder"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NtqrwEezEequRo9-mziKbQ" name="NPT_HttpEntity"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_NybP8EezEequRo9-mziKbQ" name=":: NPT_List &lt; NPT_String > :: Iterator"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_N3sKcEezEequRo9-mziKbQ" name=""/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_N3t_oEezEequRo9-mziKbQ" name="NPT_TimeStamp"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_N3vNwUezEequRo9-mziKbQ" name="NPT_DateTime"/>
      <packagedElement xmi:type="uml:DataType" xmi:id="_N3xC8EezEequRo9-mziKbQ" name="NPT_String"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_NDMLYEezEequRo9-mziKbQ" name="Source">
      <packagedElement xmi:type="uml:Class" xmi:id="_NDMycEezEequRo9-mziKbQ" name="HTTPNode">
        <generalization xmi:type="uml:Generalization" xmi:id="_NM9LYUezEequRo9-mziKbQ" general="_NM79QEezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NM1PkUezEequRo9-mziKbQ" name="m_node" visibility="public" type="_M4_tkEezEequRo9-mziKbQ" association="_NM3EwEezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NM3ExEezEequRo9-mziKbQ" name="m_childrens" visibility="public" type="_NM3r0EezEequRo9-mziKbQ" association="_NM6vIUezEequRo9-mziKbQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NnUMIEezEequRo9-mziKbQ" name="~HTTPNode" specification="_NLvqcEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	if (m_node)
		delete m_node;
	HTTPNode *t = NULL;
	for (NPT_Cardinal i = 0; i &lt; m_childrens->GetItemCount(); i++)
	{
		m_childrens->Get(i, t);
		if (t)
		{
			delete t;
		}
	}
	m_childrens->Clear();
	delete m_childrens;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NnVaQEezEequRo9-mziKbQ" name="HTTPNode" specification="_NLzU0UezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	m_node = NULL;
	m_childrens = new NPT_List&lt;HTTPNode *>();</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NnXPcUezEequRo9-mziKbQ" name="HTTPNode" specification="_NL2YIEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	m_node = node;
	m_childrens = new NPT_List&lt;HTTPNode *>();</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NnX2gEezEequRo9-mziKbQ" name="operator ==" specification="_NL6pkEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	if (other== NULL || other->m_node == NULL)
		return false ;
	IHTTPHandler* hd = other->m_node;
	const char* oth = (const char*)hd->getSegment();
	return (NPT_String(m_node->getSegment()).Compare(oth, false) == 0 ) ? true : false;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NnZrsEezEequRo9-mziKbQ" name="AddChildNode" specification="_NMNkgEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	HTTPNode *ch = new HTTPNode(child);
	if (child != NULL)
	{
		if (child->GetMyHandlerType() == HANDLER_ASTERISK)
			m_childrens->Insert(m_childrens->GetLastItem(), ch);
		else
			m_childrens->Insert(m_childrens->GetFirstItem(), ch);
	}
	else
	{
		NPT_LOG_FATAL(&quot; NULL Handle : will not be Added in Tree !&quot;);
	}
	return ch;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NnaSwEezEequRo9-mziKbQ" name="getChildNode" specification="_NMSdAUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	HTTPNode *t = NULL;
	m_childrens->Get(nIndex, t);
	return t;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nna50EezEequRo9-mziKbQ" name="getChildCount" specification="_NMWHYUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	return m_childrens->GetItemCount();</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nnbg4EezEequRo9-mziKbQ" name="SetupResponse" specification="_NMqQcEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	if ((request.GetMethod().Compare(NPT_HTTP_METHOD_GET) == 0) &amp;&amp; HTTPUtility::check_support(this->m_node->getMethods(), SUPPORT_GET))
	{
		this->m_node->OnRead(request, context, response);
		return NPT_SUCCESS;
	}
	else if ((request.GetMethod().Compare(NPT_HTTP_METHOD_POST) == 0) &amp;&amp; HTTPUtility::check_support(this->m_node->getMethods(), SUPPORT_POST))
	{
		this->m_node->OnUpdate(request, context, response);
		return NPT_SUCCESS;
	}
	else if ((request.GetMethod().Compare(NPT_HTTP_METHOD_PUT) == 0) &amp;&amp; HTTPUtility::check_support(this->m_node->getMethods(), SUPPORT_PUT))
	{
		this->m_node->OnCreate(request, context, response);
		return NPT_SUCCESS;
	}
	else if ((request.GetMethod().Compare(NPT_HTTP_METHOD_DELETE) == 0) &amp;&amp; HTTPUtility::check_support(this->m_node->getMethods(), SUPPORT_DELETE))
	{
		this->m_node->OnDelete(request, context, response);
		return NPT_SUCCESS;
	}
	else
	{
		NPT_LOG_FATAL_1( &quot;## Error : NOT Supported Method Call : %s !&quot;,
				  request.GetMethod().GetChars());
		return NPT_ERROR_NOT_SUPPORTED;
	}</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NncH8EezEequRo9-mziKbQ" name="getNodeHandler" specification="_NMnNIEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	return m_node;</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NLvqcEezEequRo9-mziKbQ" name="~HTTPNode" visibility="public" method="_NnUMIEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NLzU0UezEequRo9-mziKbQ" name="HTTPNode" visibility="public" method="_NnVaQEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NL2YIEezEequRo9-mziKbQ" name="HTTPNode" visibility="public" method="_NnXPcUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NL40YUezEequRo9-mziKbQ" name="node" type="_M4_tkEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NL6pkEezEequRo9-mziKbQ" name="operator ==" visibility="public" method="_NnX2gEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NL9s4EezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NL9s4UezEequRo9-mziKbQ" name="other" type="_NDMycEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NMAwMEezEequRo9-mziKbQ" name="operator ==" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMDMcEezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMDMcUezEequRo9-mziKbQ" name="other" type="_NDMycEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NMGPwEezEequRo9-mziKbQ" name="operator ==" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMIE8EezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMKhMUezEequRo9-mziKbQ" name="other" type="_NMJTEEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NMNkgEezEequRo9-mziKbQ" name="AddChildNode" visibility="public" method="_NnZrsEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMPZsEezEequRo9-mziKbQ" name="ret" type="_NDMycEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMQn0UezEequRo9-mziKbQ" name="child" type="_M4_tkEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NMSdAUezEequRo9-mziKbQ" name="getChildNode" visibility="public" method="_NnaSwEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMUSMEezEequRo9-mziKbQ" name="ret" type="_NDMycEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMWHYEezEequRo9-mziKbQ" name="nIndex">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NMWHYUezEequRo9-mziKbQ" name="getChildCount" visibility="public" method="_Nna50EezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMeDMUezEequRo9-mziKbQ" name="ret" type="_NMc1EEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NMeqQEezEequRo9-mziKbQ" name="FindSegmentChildNode" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMhtkEezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMi7sEezEequRo9-mziKbQ" name="segment" type="_NMJTEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMi7sUezEequRo9-mziKbQ" name="found" type="_NDMycEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NMnNIEezEequRo9-mziKbQ" name="getNodeHandler" visibility="public" method="_NncH8EezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMobQEezEequRo9-mziKbQ" name="ret" type="_M4_tkEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NMqQcEezEequRo9-mziKbQ" name="SetupResponse" visibility="public" method="_Nnbg4EezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMtTwUezEequRo9-mziKbQ" name="ret" type="_NMsFoEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMt60EezEequRo9-mziKbQ" name="request" type="_NAIQUUezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NMw-IEezEequRo9-mziKbQ" name="context" type="_NAPlEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NM0BcEezEequRo9-mziKbQ" name="response" type="_NAigAEezEequRo9-mziKbQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NM3EwEezEequRo9-mziKbQ" name="A_m_node_hTTPNode" memberEnd="_NM1PkUezEequRo9-mziKbQ _NM3EwUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NM3EwUezEequRo9-mziKbQ" name="hTTPNode" type="_NDMycEezEequRo9-mziKbQ" association="_NM3EwEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NM3EwkezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NM3Ew0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NM6vIUezEequRo9-mziKbQ" name="A_m_childrens_hTTPNode" memberEnd="_NM3ExEezEequRo9-mziKbQ _NM7WMEezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NM7WMEezEequRo9-mziKbQ" name="hTTPNode" type="_NDMycEezEequRo9-mziKbQ" association="_NM6vIUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NM7WMUezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NM7WMkezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_NNA1wEezEequRo9-mziKbQ" name="HTTPServer">
        <generalization xmi:type="uml:Generalization" xmi:id="_NY9AAEezEequRo9-mziKbQ" general="_M_BdEEezEequRo9-mziKbQ"/>
        <generalization xmi:type="uml:Generalization" xmi:id="_NY_cQUezEequRo9-mziKbQ" general="_NY-OIEezEequRo9-mziKbQ"/>
        <generalization xmi:type="uml:Generalization" xmi:id="_NZAqYUezEequRo9-mziKbQ" general="_NVO9oEezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NYvkoUezEequRo9-mziKbQ" name="treeHandler" visibility="private" type="_NVaj0EezEequRo9-mziKbQ" association="_NYxZ0UezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NYxZ1UezEequRo9-mziKbQ" name="m_loop" visibility="private" aggregation="composite" association="_NYyn8EezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NYzPAUezEequRo9-mziKbQ" name="m_LoopLock" visibility="private" type="_NYzPAkezEequRo9-mziKbQ" aggregation="composite" association="_NY0dIUezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NY1EMEezEequRo9-mziKbQ" name="m_DataTasksWaiting" visibility="private" type="_NY1rQEezEequRo9-mziKbQ" association="_NY4HgEezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NY4HhEezEequRo9-mziKbQ" name="m_DataTasksWorkers" visibility="private" type="_NY4ukEezEequRo9-mziKbQ" association="_NY7K0UezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NY7x4UezEequRo9-mziKbQ" name="m_TasksLock" visibility="private" type="_NYzPAkezEequRo9-mziKbQ" aggregation="composite" association="_NY7x4kezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NY8Y8kezEequRo9-mziKbQ" name="m_MaxTasks" visibility="private" type="_NMc1EEezEequRo9-mziKbQ" aggregation="composite" association="_NY8Y80ezEequRo9-mziKbQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NprjoEezEequRo9-mziKbQ" name="~HTTPServer" specification="_NRj-kUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO(&quot;## destructing  ...  &quot;);
	if (isLoop())
		this->Stop();

	if(treeHandler)
		delete treeHandler;

    for(NPT_Cardinal i = 0;i&lt;m_DataTasksWorkers->GetItemCount();i++)
	{
		HTTPServerTask* t= NULL;
		m_DataTasksWorkers->Get(i, t);
		if(t)
		{
			NPT_LOG_WARNING_1( &quot;Task %llu is deleted !! &quot;,t->GetCurrentThreadId());
			delete t;
		}
	}

    {
		NPT_AutoLock lock(m_TasksLock);
		m_DataTasksWaiting->Clear();
		delete m_DataTasksWaiting;
    }
    m_DataTasksWorkers->Clear();
    delete m_DataTasksWorkers;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NpvOAUezEequRo9-mziKbQ" name="isLoop" specification="_NYtvcEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	{
		NPT_AutoLock lock(m_LoopLock);
		return m_loop;
	}</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Npv1EEezEequRo9-mziKbQ" name="getTreeHandler" specification="_NVYuoUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	return treeHandler;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NpwcIEezEequRo9-mziKbQ" name="setRoot" specification="_NYg7IUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	if ( this->treeHandler != NULL)
		delete this->treeHandler;
	this->treeHandler =  new HTTPTree(treeHandler);
	return Result::CMOP_SUCCESS;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NpxDMEezEequRo9-mziKbQ" name="Run" specification="_NYrTMEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_Result result = NPT_FAILURE;
	do {
		NPT_LOG_INFO(&quot;Test HTTP server waiting for connection ...&quot;);
		result = GetNewClient();
		NPT_LOG_INFO_2( &quot;GetNewClient returned %d (%s)&quot;, result,
				NPT_ResultText(result));
	} while (isLoop());</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NpyRUEezEequRo9-mziKbQ" name="StartServer" specification="_NRnB4UezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	// todo
	return CMOP_SUCCESS;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NpyRUUezEequRo9-mziKbQ" name="Stop" specification="_NRo3EUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	{
		NPT_AutoLock lock(m_LoopLock);
		m_loop = false;
		NPT_LOG_WARNING(&quot;Test HTTP server Stopped ...&quot;);
	}
	Abort();
	this->StopAllTasks();
	return CMOP_SUCCESS;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NpzfcEezEequRo9-mziKbQ" name="ProcessClientData" specification="_NRrTUUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO(&quot;will extract a new TaskData !&quot;);
	HTTPServerTaskData * taskData  = NULL ;
	{
		NPT_AutoLock lock(m_TasksLock);
		this->m_DataTasksWaiting->PopHead(taskData);
	}
	if(taskData != NULL)
	{
		NPT_LOG_INFO(&quot;Got the new popped TaskData !&quot;);
		if(task != NULL)
		{
			NPT_LOG_INFO_2(&quot;Will use an old idle task Worker  [%d/%d]!&quot;,this->m_DataTasksWorkers->GetItemCount(),m_MaxTasks);
			task->setData(taskData->m_input,taskData->m_output,taskData->m_context);
			task->backToWork();
		}
		else if (this->m_DataTasksWorkers->GetItemCount() &lt; m_MaxTasks)
		{
			NPT_LOG_INFO(&quot;Will create a new task Worker  !&quot;);
			HTTPServerTask * tt = new HTTPServerTask(taskData->m_input,taskData->m_output,taskData->m_context,this);
			this->m_DataTasksWorkers->Add(tt);
			tt->Start();
		}
		else
		{
			NPT_LOG_FATAL( &quot;Very Bizarre Error lost TaskData  : will not be executed &quot;);
		}
		//cleaning
		delete taskData ;
	}
	else
	{
		NPT_LOG_INFO( &quot;No Waiting TaskData  to be executed &quot;);
	}</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Np1UoEezEequRo9-mziKbQ" name="GetNewClient" specification="_NYlMkUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	::NPT_InputStreamReference input;
	::NPT_OutputStreamReference output;
	::NPT_HttpRequestContext context;

	// Wait to get a new Client
	::NPT_Result result = WaitForNewClient(input, output, &amp;context);
	NPT_LOG_FATAL_2( &quot;HAVE A NEW CLIENT !! :WaitForNewClient returned %d (%s)&quot;, result,
			NPT_ResultText(result));
	if (NPT_FAILED(result))
		return HTTPUtility::MapNPTResult(result);

	{
		NPT_AutoLock lock(m_TasksLock);
		result = this->m_DataTasksWaiting->Add(new HTTPServerTaskData(input,output,&amp;context));
		NPT_LOG_WARNING_2( &quot;PushData  returned %d (%s)&quot;, result, NPT_ResultText(result));
	}

	NPT_LOG_WARNING_1(&quot;A new Data has arrived to be executed  [%s ]&quot;,NPT_ResultText(result));
	// check if we can pop data , else it will be lost
	HTTPServerTask * task = NULL;
	bool idle = IsAWorkerIdle(task);
	if((idle == true) || (this->m_DataTasksWorkers->GetItemCount() &lt; m_MaxTasks) )
	{
		ProcessClientData(task );
	}
	else
	{
		NPT_LOG_WARNING(&quot;we cannot Launch a new Task , have to wait&quot;);
	}

	return HTTPUtility::MapNPTResult(result);</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Np2iwEezEequRo9-mziKbQ" name="IsAWorkerIdle" specification="_NYmasUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO_1( &quot;Cheking if there is an Idle task from %d ones &quot;,m_DataTasksWorkers->GetItemCount());
	int count = 0;
	for(NPT_Cardinal i = 0;i&lt;m_DataTasksWorkers->GetItemCount();i++)
	{
		count++;
		HTTPServerTask* t= NULL;
		m_DataTasksWorkers->Get(i, t);
		if(t)
		{
			NPT_LOG_INFO_4( &quot;on  %d/%d :%llu: IsIdle>> %d  &quot;,count, m_DataTasksWorkers->GetItemCount(), t->GetCurrentThreadId(),t->IsIdle());
			if( t->IsIdle() == true )
			{
				task = t;
				return true;
			}
		}
	}
	return false;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Np3J0EezEequRo9-mziKbQ" name="StopAllTasks" specification="_NYj-cEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	{
		NPT_AutoLock lock(m_TasksLock);
		m_DataTasksWaiting->Clear();
    }

    for(NPT_Cardinal i = 0;i&lt;m_DataTasksWorkers->GetItemCount();i++)
	{
		HTTPServerTask* t= NULL;
		m_DataTasksWorkers->Get(i, t);
		if(t)
		{
			NPT_LOG_WARNING_1( &quot;Task %llu is Stopped !! &quot;,t->GetCurrentThreadId());
			t->Stop();
		}
	}
    NPT_LOG_WARNING(&quot;>> All task are Stopped !! &quot;);
    return  CMOP_SUCCESS;</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NRbbsEezEequRo9-mziKbQ" name="HTTPServer" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NRg7QUezEequRo9-mziKbQ" name="listen_address" type="_NRfGEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NRjXgUezEequRo9-mziKbQ" name="listen_port" type="_NRhiUEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NRj-kEezEequRo9-mziKbQ" name="max_threads_workers" type="_NRhiUEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NRj-kUezEequRo9-mziKbQ" name="~HTTPServer" visibility="public" method="_NprjoEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NRnB4UezEequRo9-mziKbQ" name="StartServer" visibility="public" method="_NpyRUEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NRo3EEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NRo3EUezEequRo9-mziKbQ" name="Stop" visibility="public" method="_NpyRUUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NRrTUEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NRrTUUezEequRo9-mziKbQ" name="ProcessClientData" visibility="public" method="_NpzfcEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NVSoAEezEequRo9-mziKbQ" name="task" type="_NR0dQEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NVT2IEezEequRo9-mziKbQ" name="CalculateQueryPath" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NVVEQEezEequRo9-mziKbQ" name="ret" type="_NMsFoEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NVVrUEezEequRo9-mziKbQ" name="UrlPath" type="_NMJTEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NVXggUezEequRo9-mziKbQ" name="path" type="_NVWSYEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NVYuoUezEequRo9-mziKbQ" name="getTreeHandler" visibility="public" method="_Npv1EEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYcpsEezEequRo9-mziKbQ" name="ret" type="_NVaj0EezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYee4EezEequRo9-mziKbQ" name="getSharedEventing" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYftAEezEequRo9-mziKbQ" name="ret" type="_NVJeEUezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYg7IUezEequRo9-mziKbQ" name="setRoot" visibility="public" method="_NpwcIEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYiJQEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYiwUEezEequRo9-mziKbQ" name="treeHandler" type="_M4_tkEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYj-cEezEequRo9-mziKbQ" name="StopAllTasks" visibility="private" method="_Np3J0EezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYlMkEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYlMkUezEequRo9-mziKbQ" name="GetNewClient" visibility="private" method="_Np1UoEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYmasEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYmasUezEequRo9-mziKbQ" name="IsAWorkerIdle" visibility="private" method="_Np2iwEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYoP4EezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYo28EezEequRo9-mziKbQ" name="task" type="_NR0dQEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYrTMEezEequRo9-mziKbQ" name="Run" visibility="private" method="_NpxDMEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYtvcEezEequRo9-mziKbQ" name="isLoop" visibility="private" method="_NpvOAUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYvkoEezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_NR0dQEezEequRo9-mziKbQ" name="HTTPServerTask">
        <generalization xmi:type="uml:Generalization" xmi:id="_NVQLwUezEequRo9-mziKbQ" general="_NVO9oEezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NVAUIUezEequRo9-mziKbQ" name="m_server" visibility="private" type="_NNA1wEezEequRo9-mziKbQ" association="_NVBiQUezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NVCJU0ezEequRo9-mziKbQ" name="m_input" visibility="private" type="_NVCwYEezEequRo9-mziKbQ" aggregation="composite" association="_NVDXcUezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NVD-g0ezEequRo9-mziKbQ" name="m_output" visibility="private" type="_NVElkEezEequRo9-mziKbQ" aggregation="composite" association="_NVFzsEezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NVFztEezEequRo9-mziKbQ" name="m_context" visibility="private" type="_NVGawEezEequRo9-mziKbQ" association="_NVI3AUezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NVJeEEezEequRo9-mziKbQ" name="m_status" visibility="private" type="_NVJeEUezEequRo9-mziKbQ" association="_NVMhYUezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NVNIc0ezEequRo9-mziKbQ" name="m_running" visibility="private" aggregation="composite" association="_NVOWkEezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NtcCQEezEequRo9-mziKbQ" name="HTTPServerTask" specification="_NUdhkEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	m_server = server;
	m_input = input;
	m_output = output;
	m_context = context;
	m_running = true;
	m_status = new NPT_SharedVariable(1);</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NtdQYEezEequRo9-mziKbQ" name="~HTTPServerTask" specification="_NUpu0UezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO( &quot;## destroyer  &quot;);
	this->Stop();
	delete m_status;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NteegEezEequRo9-mziKbQ" name="backToWork" specification="_NU0G4UezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	if (IsIdle()) {
		m_status->SetValue(1);
		NPT_LOG_INFO(&quot; Task : data are updated !&quot;);
	} else {
		NPT_LOG_FATAL(&quot;Busy Task , data will not be updated !&quot;);
	}</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NteegUezEequRo9-mziKbQ" name="IsIdle" specification="_NU2jIUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	if (m_status->GetValue() == 0) //idle
		return true;
	else
		return false;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NtfFkEezEequRo9-mziKbQ" name="Stop" specification="_NU4_YUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	if(m_running)
	{
		this->Interrupt();
		m_running = false ;
		m_status->SetValue(1);
		NPT_LOG_WARNING(&quot;Stopping Task ! &quot;);
	}
	else
	{
		NPT_LOG_WARNING(&quot;Task is Already Stopped ! &quot;);
	}</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NtfsoEezEequRo9-mziKbQ" name="Run" specification="_NU8pwUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO_1( &quot;HTTPServerTask is launched !! %d&quot;, m_status->GetValue());
	do {
		m_status->WaitWhileEquals(0); //has nothing to do
		if (m_running) {
			NPT_LOG_INFO_1(&quot;[task : %llu] : task Begin of the Run .&quot;,
					this->GetCurrentThreadId());
			this->RespondToClient();
			NPT_LOG_INFO_1(&quot;[task : %llu] : task End   of the Run .&quot;,
					this->GetCurrentThreadId());
			NPT_LOG_INFO_2(&quot;[task : %llu] : Backing TO idle %d .&quot;,
							this->GetCurrentThreadId(),m_status->GetValue());

			NPT_LOG_INFO_1(&quot;[task : %llu] : task End   of the Run .&quot;,
								this->GetCurrentThreadId());
			//back to idle status
			m_status->SetValue(0);

			NPT_LOG_INFO_1( &quot;[task : %llu] : Now we are idle , will seek new data to process from Server  .&quot;,
											this->GetCurrentThreadId());
			m_server->ProcessClientData(this);


		}
	} while (m_running);
	NPT_LOG_WARNING_1( &quot; Task [%llu] is Stopped !! &quot;,this->GetCurrentThreadId());</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Ntj-EEezEequRo9-mziKbQ" name="RespondToClient" specification="_NU7boEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_HttpRequest* request;
	NPT_HttpResponse* response = NULL;
	NPT_Result result = NPT_ERROR_NO_SUCH_ITEM;
	bool resultsearch = false;
	bool terminate_server = false;
	HTTPNode* found = NULL;

	NPT_HttpResponder responder(m_input, m_output);
	result = responder.ParseRequest(request, &amp;m_context->GetLocalAddress());
	if (result != NPT_SUCCESS ){
		NPT_LOG_WARNING_2( &quot;Failed responder.ParseRequest >> %d:%s!!&quot;,result,NPT_ResultText(result));
		if(request == NULL)
		{
			NPT_LOG_FATAL(&quot;Failed responder. Getting a NULL Request !!&quot;);
			return result;
		}
	}
	NPT_LOG_INFO_1( &quot;request, path=%s&quot;,
			request->GetUrl().ToRequestString(true).GetChars());

	// prepare the response body , create a response object, and set it empty
	response = new NPT_HttpResponse(200, &quot;OK&quot;, NPT_HTTP_PROTOCOL_1_0);
	NPT_HttpEntity* body = new NPT_HttpEntity();
	response->SetEntity(body);
	body->SetInputStream(&quot;&quot;);
	body->SetContentType(&quot;text/html&quot;);

   // augment the headers with server information
	response->GetHeaders().SetHeader(NPT_HTTP_HEADER_SERVER, HTTPUtility::HTTP_SERVER_NAME_VERSION_NUMBER, false);

	//Calculate demanded PATH
	NPT_List&lt;NPT_String> path;
	result = this->m_server->CalculateQueryPath(request->GetUrl().GetPath(),
			path);
	NPT_LOG_INFO_2( &quot;CalculateQueryPath returned %d (%s)&quot;, result,
			NPT_ResultText(result));
	if (!NPT_FAILED(result) &amp;&amp; (this->m_server->getTreeHandler() != NULL)) {
		//Search for handler correspondant to the PATH
		resultsearch = this->m_server->getTreeHandler()->FindChildNodeOnTree(
				path, found);
		NPT_LOG_INFO_2( &quot;FindChildNodeOnTree returned %d (%s)&quot;, result,
				NPT_ResultText(result));
	}

	if (found) {
		NPT_LOG_INFO(&quot;We Found the handle , will trait-it !&quot;);
		if(found->getNodeHandler()->GetMyHandlerType() == HANDLER_EVENT /*TODO add check for method support*/)
		{
			NPT_LOG_INFO(&quot;>> THE HANDLER IS AN EVENTING ONE .&quot;);
			// todo deal with event handler
			/*IHTTPEventHandler * event= (IHTTPEventHandler*) found;
			if (event->PushWaitingclient(m_input,m_output,m_context,request) == NPT_SUCCESS)
			{*/
				NPT_LOG_INFO_1( &quot;>> Event Are Armed , user will wait @@ %p ..&quot;,(void*)m_input.AsPointer());
				goto endEventing;
			/*}
			else
			{
				NPT_LOG_INFO(&quot;>> No Event Are Armed , user will get Response Immediately&quot;);
			}*/
		}

		// ask the handler to setup the response
		result = found->SetupResponse(*request, *m_context, *response);
		NPT_LOG_INFO_1( &quot;We Found the handle ,  it return %s  !&quot;,
				NPT_ResultText(result));

	}

	if ((result == NPT_ERROR_NO_SUCH_ITEM)|| (found == NULL)|| (resultsearch == false)){
		body->SetInputStream(HTTPUtility::HTTP_DEFAULT_404_HTML);
		body->SetContentType(&quot;text/html&quot;);
		response->SetStatus(404, &quot;Not Found&quot;);
		//response->SetEntity(body);
		NPT_LOG_FATAL(&quot;NPT_ERROR_NO_SUCH_ITEM &quot;);
	}
	else if (result == NPT_ERROR_PERMISSION_DENIED)
	{

		body->SetInputStream(HTTPUtility::HTTP_DEFAULT_403_HTML);
		body->SetContentType(&quot;text/html&quot;);
		response->SetStatus(402, &quot;Not supported&quot;);
		NPT_LOG_FATAL(&quot;NPT_ERROR_PERMISSION_DENIED &quot;);
	}
	else if (result == NPT_ERROR_TERMINATED)
	{
		// mark that we want to exit
		terminate_server = true;
	}
	else if (NPT_FAILED(result))
	{
		body->SetInputStream(HTTPUtility::HTTP_DEFAULT_500_HTML);
		body->SetContentType(&quot;text/html&quot;);
		response->SetStatus(500, &quot;Internal Error&quot;);
		NPT_LOG_FATAL(&quot;NPT_ERROR_TERMINATED &quot;);
	}

	// send the response headers
	result = responder.SendResponseHeaders(*response);
	if (NPT_FAILED(result)) {
		NPT_LOG_INFO_2( &quot;SendResponseHeaders failed (%d:%s)&quot;, result,
				NPT_ResultText(result));
		goto end;
	}

	// send the body
	if (request->GetMethod() != NPT_HTTP_METHOD_HEAD) {
		if (found) {
			result = found->SendResponseBody(*m_context, *response, *m_output);
		} else {
			// send body manually in case there was an error with the handler or no handler was found
			NPT_InputStreamReference body_stream;
			NPT_LOG_FATAL(&quot;Sending The Body !!!!!!!!!!!!!!!!&quot;);
			body->GetInputStream(body_stream);
			if (!body_stream.IsNull()) {
				result = NPT_StreamToStreamCopy(*body_stream, *m_output, 0,
						body->GetContentLength());
				if (NPT_FAILED(result)) {
					NPT_LOG_INFO_2( &quot;NPT_StreamToStreamCopy returned %d (%s)&quot;, result,
							NPT_ResultText(result));
					goto end;
				}
			}
		}
	}

	// flush
	m_output->Flush();

	// if we need to die, we return an error code
	if (NPT_SUCCEEDED(result) &amp;&amp; terminate_server)
		result = NPT_ERROR_TERMINATED;

end:
	// cleanup
	delete request;
endEventing:
	delete response;
	return result;</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NUdhkEezEequRo9-mziKbQ" name="HTTPServerTask" visibility="public" method="_NtcCQEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NUiaEUezEequRo9-mziKbQ" name="input" type="_NUhL8EezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NUldYUezEequRo9-mziKbQ" name="output" type="_NUkPQEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NUmrgEezEequRo9-mziKbQ" name="context" type="_NAPlEEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NUogsEezEequRo9-mziKbQ" name="server" type="_NNA1wEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NUpu0UezEequRo9-mziKbQ" name="~HTTPServerTask" visibility="public" method="_NtdQYEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NUsLEUezEequRo9-mziKbQ" name="setData" visibility="public">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NUunUUezEequRo9-mziKbQ" name="input" type="_NUhL8EezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NUxDkEezEequRo9-mziKbQ" name="output" type="_NUkPQEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NUy4wEezEequRo9-mziKbQ" name="context" type="_NAPlEEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NU0G4UezEequRo9-mziKbQ" name="backToWork" visibility="public" method="_NteegEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NU2jIUezEequRo9-mziKbQ" name="IsIdle" visibility="public" method="_NteegUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NU4_YEezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NU4_YUezEequRo9-mziKbQ" name="Stop" visibility="public" method="_NtfFkEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NU7boEezEequRo9-mziKbQ" name="RespondToClient" visibility="private" method="_Ntj-EEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NU8pwEezEequRo9-mziKbQ" name="ret" type="_NMsFoEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NU8pwUezEequRo9-mziKbQ" name="Run" visibility="private" method="_NtfsoEezEequRo9-mziKbQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NVBiQUezEequRo9-mziKbQ" name="A_m_server_hTTPServerTask" memberEnd="_NVAUIUezEequRo9-mziKbQ _NVCJUEezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NVCJUEezEequRo9-mziKbQ" name="hTTPServerTask" type="_NR0dQEezEequRo9-mziKbQ" association="_NVBiQUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NVCJUUezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVCJUkezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NVDXcUezEequRo9-mziKbQ" name="A_m_input_hTTPServerTask" memberEnd="_NVCJU0ezEequRo9-mziKbQ _NVD-gEezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NVD-gEezEequRo9-mziKbQ" name="hTTPServerTask" type="_NR0dQEezEequRo9-mziKbQ" association="_NVDXcUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NVD-gUezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVD-gkezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NVFzsEezEequRo9-mziKbQ" name="A_m_output_hTTPServerTask" memberEnd="_NVD-g0ezEequRo9-mziKbQ _NVFzsUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NVFzsUezEequRo9-mziKbQ" name="hTTPServerTask" type="_NR0dQEezEequRo9-mziKbQ" association="_NVFzsEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NVFzskezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVFzs0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NVI3AUezEequRo9-mziKbQ" name="A_m_context_hTTPServerTask" memberEnd="_NVFztEezEequRo9-mziKbQ _NVI3AkezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NVI3AkezEequRo9-mziKbQ" name="hTTPServerTask" type="_NR0dQEezEequRo9-mziKbQ" association="_NVI3AUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NVI3A0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVI3BEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NVMhYUezEequRo9-mziKbQ" name="A_m_status_hTTPServerTask" memberEnd="_NVJeEEezEequRo9-mziKbQ _NVNIcEezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NVNIcEezEequRo9-mziKbQ" name="hTTPServerTask" type="_NR0dQEezEequRo9-mziKbQ" association="_NVMhYUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NVNIcUezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVNIckezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NVOWkEezEequRo9-mziKbQ" name="A_m_running_hTTPServerTask" memberEnd="_NVNIc0ezEequRo9-mziKbQ _NVOWkUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NVOWkUezEequRo9-mziKbQ" name="hTTPServerTask" type="_NR0dQEezEequRo9-mziKbQ" association="_NVOWkEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NVOWkkezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NVOWk0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_NVaj0EezEequRo9-mziKbQ" name="HTTPTree">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NYY_UUezEequRo9-mziKbQ" name="m_root" visibility="private" type="_NDMycEezEequRo9-mziKbQ" association="_NYa0gUezEequRo9-mziKbQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NyW-gEezEequRo9-mziKbQ" name="~HTTPTree" specification="_NYOnQUezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	delete m_root;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NyXlkEezEequRo9-mziKbQ" name="HTTPTree" specification="_NYH5kEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	m_root = new HTTPNode(content);</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NyYMoEezEequRo9-mziKbQ" name="getRoot" specification="_NYMLAEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	return m_root;</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NyYzsEezEequRo9-mziKbQ" name="FindChildNodeOnTree" specification="_NYS4sEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	NPT_LOG_INFO(&quot;Fetching on Tree !&quot;);
	HTTPNode *t = m_root;
	::NPT_List&lt;NPT_String>::Iterator it = Segments.GetFirstItem();
	::NPT_String segment = *it;
	bool fd = false;
	int count = 0;

	if (t->operator==(segment))
	{
		NPT_LOG_FINE_2( &quot;Fetching on Tree : segment[%d]: '%s'  found >>  on root !&quot;, count, segment.GetChars());
		found = t;
		fd = true;
		it++;
	}
	else
	{
		NPT_LOG_SEVERE_2(&quot;Fetching on Tree : segment[%d]: '%s' NOT found >>  on root !&quot;, count, segment.GetChars());
		return false;
	}

	while (it)
	{
		count++;
		segment = *it;
		NPT_LOG_FINE_2( &quot;Fetching on Tree for segment[%d]: '%s' !&quot;, count, segment.GetChars());
		NPT_LOG_INFO_3(&quot;Fetching on Tree : segment[%d]: '%s'  searching on children of '%s' !&quot;,
				  count, segment.GetChars(), t->getNodeHandler()->getSegment() );
		fd = t->FindSegmentChildNode(segment, t);
		if (fd)
		{
			NPT_LOG_FINE_2( &quot;Fetching on Tree : segment[%d]: '%s'  found >>  on a children !&quot;, count, segment.GetChars());
			found = t;
			fd = true;
			it++;
		}
		else
		{
			fd = false;
			it++;
			return fd;
		}
	}
	return fd;</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYH5kEezEequRo9-mziKbQ" name="HTTPTree" visibility="public" method="_NyXlkEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYKV0UezEequRo9-mziKbQ" name="content" type="_M4_tkEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYMLAEezEequRo9-mziKbQ" name="getRoot" visibility="public" method="_NyYMoEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYNZIEezEequRo9-mziKbQ" name="ret" type="_NDMycEezEequRo9-mziKbQ" direction="return"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYOnQUezEequRo9-mziKbQ" name="~HTTPTree" visibility="public" method="_NyW-gEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NYS4sEezEequRo9-mziKbQ" name="FindChildNodeOnTree" visibility="public" method="_NyYzsEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYUt4EezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYWjEUezEequRo9-mziKbQ" name="Segments" type="_NYVU8EezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NYWjEkezEequRo9-mziKbQ" name="found" type="_NDMycEezEequRo9-mziKbQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NYa0gUezEequRo9-mziKbQ" name="A_m_root_hTTPTree" memberEnd="_NYY_UUezEequRo9-mziKbQ _NYa0gkezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NYa0gkezEequRo9-mziKbQ" name="hTTPTree" type="_NVaj0EezEequRo9-mziKbQ" association="_NYa0gUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NYa0g0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYa0hEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NYxZ0UezEequRo9-mziKbQ" name="A_treeHandler_hTTPServer" memberEnd="_NYvkoUezEequRo9-mziKbQ _NYxZ0kezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NYxZ0kezEequRo9-mziKbQ" name="hTTPServer" type="_NNA1wEezEequRo9-mziKbQ" association="_NYxZ0UezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NYxZ00ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYxZ1EezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NYyn8EezEequRo9-mziKbQ" name="A_m_loop_hTTPServer" memberEnd="_NYxZ1UezEequRo9-mziKbQ _NYyn8UezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NYyn8UezEequRo9-mziKbQ" name="hTTPServer" type="_NNA1wEezEequRo9-mziKbQ" association="_NYyn8EezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NYyn8kezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NYzPAEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NY0dIUezEequRo9-mziKbQ" name="A_m_LoopLock_hTTPServer" memberEnd="_NYzPAUezEequRo9-mziKbQ _NY0dIkezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NY0dIkezEequRo9-mziKbQ" name="hTTPServer" type="_NNA1wEezEequRo9-mziKbQ" association="_NY0dIUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NY0dI0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NY0dJEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NY4HgEezEequRo9-mziKbQ" name="A_m_DataTasksWaiting_hTTPServer" memberEnd="_NY1EMEezEequRo9-mziKbQ _NY4HgUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NY4HgUezEequRo9-mziKbQ" name="hTTPServer" type="_NNA1wEezEequRo9-mziKbQ" association="_NY4HgEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NY4HgkezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NY4Hg0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NY7K0UezEequRo9-mziKbQ" name="A_m_DataTasksWorkers_hTTPServer" memberEnd="_NY4HhEezEequRo9-mziKbQ _NY7K0kezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NY7K0kezEequRo9-mziKbQ" name="hTTPServer" type="_NNA1wEezEequRo9-mziKbQ" association="_NY7K0UezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NY7K00ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NY7x4EezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NY7x4kezEequRo9-mziKbQ" name="A_m_TasksLock_hTTPServer" memberEnd="_NY7x4UezEequRo9-mziKbQ _NY7x40ezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NY7x40ezEequRo9-mziKbQ" name="hTTPServer" type="_NNA1wEezEequRo9-mziKbQ" association="_NY7x4kezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NY8Y8EezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NY8Y8UezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NY8Y80ezEequRo9-mziKbQ" name="A_m_MaxTasks_hTTPServer" memberEnd="_NY8Y8kezEequRo9-mziKbQ _NY8Y9EezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NY8Y9EezEequRo9-mziKbQ" name="hTTPServer" type="_NNA1wEezEequRo9-mziKbQ" association="_NY8Y80ezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NY8Y9UezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NY8Y9kezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_NZDtsEezEequRo9-mziKbQ" name="HTTPServerTaskData">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NbpHoEezEequRo9-mziKbQ" name="m_input" visibility="public" type="_NVCwYEezEequRo9-mziKbQ" aggregation="composite" association="_NbpHoUezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NbpusEezEequRo9-mziKbQ" name="m_output" visibility="public" type="_NVElkEezEequRo9-mziKbQ" aggregation="composite" association="_NbpusUezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NbputUezEequRo9-mziKbQ" name="m_context" visibility="public" type="_NVGawEezEequRo9-mziKbQ" association="_Nbrj4EezEequRo9-mziKbQ"/>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_Nbrj5EezEequRo9-mziKbQ" name="m_request" visibility="public" type="_NbsK8EezEequRo9-mziKbQ" association="_NbunMEezEequRo9-mziKbQ"/>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Nbf9sEezEequRo9-mziKbQ" name="HTTPServerTaskData" specification="_NbWMsEezEequRo9-mziKbQ" isReentrant="false">
          <language>C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NbogkUezEequRo9-mziKbQ" name="HTTPServerTaskData" specification="_Nbf9sUezEequRo9-mziKbQ" isReentrant="false">
          <language>C++</language>
          <body>	</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NbWMsEezEequRo9-mziKbQ" name="HTTPServerTaskData" visibility="public" method="_Nbf9sEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NbZ3EUezEequRo9-mziKbQ" name="input" type="_NVCwYEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NbbFMUezEequRo9-mziKbQ" name="output" type="_NVElkEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_Nbc6YEezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_Nbf9sUezEequRo9-mziKbQ" name="HTTPServerTaskData" visibility="public" method="_NbogkUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NbiZ8EezEequRo9-mziKbQ" name="input" type="_NVCwYEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NbjoEEezEequRo9-mziKbQ" name="output" type="_NVElkEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_Nbk2MEezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NbmEUEezEequRo9-mziKbQ" name="request" type="_NAIQUUezEequRo9-mziKbQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NbpHoUezEequRo9-mziKbQ" name="A_m_input_hTTPServerTaskData" memberEnd="_NbpHoEezEequRo9-mziKbQ _NbpHokezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NbpHokezEequRo9-mziKbQ" name="hTTPServerTaskData" type="_NZDtsEezEequRo9-mziKbQ" association="_NbpHoUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NbpHo0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NbpHpEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NbpusUezEequRo9-mziKbQ" name="A_m_output_hTTPServerTaskData" memberEnd="_NbpusEezEequRo9-mziKbQ _NbpuskezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NbpuskezEequRo9-mziKbQ" name="hTTPServerTaskData" type="_NZDtsEezEequRo9-mziKbQ" association="_NbpusUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Nbpus0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NbputEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Nbrj4EezEequRo9-mziKbQ" name="A_m_context_hTTPServerTaskData" memberEnd="_NbputUezEequRo9-mziKbQ _Nbrj4UezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_Nbrj4UezEequRo9-mziKbQ" name="hTTPServerTaskData" type="_NZDtsEezEequRo9-mziKbQ" association="_Nbrj4EezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Nbrj4kezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Nbrj40ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NbunMEezEequRo9-mziKbQ" name="A_m_request_hTTPServerTaskData" memberEnd="_Nbrj5EezEequRo9-mziKbQ _NbunMUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NbunMUezEequRo9-mziKbQ" name="hTTPServerTaskData" type="_NZDtsEezEequRo9-mziKbQ" association="_NbunMEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NbunMkezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NbunM0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Class" xmi:id="_NbwcYEezEequRo9-mziKbQ" name="HTTPUtility">
        <ownedAttribute xmi:type="uml:Property" xmi:id="_Nd-C4UezEequRo9-mziKbQ" name="HTTP_DEFAULT_MAX_THREADS_WORKERS" visibility="public" isStatic="true" aggregation="composite" association="_Nd_4EUezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N1YdUEezEequRo9-mziKbQ" name="defaultValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            <language>C++</language>
            <body>10</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_Nd_4FUezEequRo9-mziKbQ" name="HTTP_SERVER_PORT_NUMBER" visibility="public" isStatic="true" aggregation="composite" association="_NeBtQUezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N1YdUUezEequRo9-mziKbQ" name="defaultValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
            <language>C++</language>
            <body>8080</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NeBtRUezEequRo9-mziKbQ" name="HTTP_SERVER_NAME_VERSION_NUMBER" visibility="public" isStatic="true" association="_NeEwkUezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N1YdUkezEequRo9-mziKbQ" name="defaultValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            <language>C++</language>
            <body>&quot;CMOP/V0.0.1&quot;</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NeEwlUezEequRo9-mziKbQ" name="APP_SERVER_NAME" visibility="public" isStatic="true" association="_NeIa8UezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N1YdU0ezEequRo9-mziKbQ" name="defaultValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            <language>C++</language>
            <body>&quot;CMOP-SRV&quot;</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NeIa9UezEequRo9-mziKbQ" name="HTTP_DEFAULT_403_HTML" visibility="public" isStatic="true" association="_NeLeQEezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N1YdVEezEequRo9-mziKbQ" name="defaultValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            <language>C++</language>
            <body>&quot;&lt;html>&lt;head>&lt;title>403 Forbidden&lt;/title>&lt;/head>&lt;body>&lt;h1>Forbidden&lt;/h1>&lt;p>Access to this URL is forbidden.&lt;/p>&lt;/html>&quot;</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NeLeREezEequRo9-mziKbQ" name="HTTP_DEFAULT_404_HTML" visibility="public" isStatic="true" association="_NeN6gUezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N1YdVUezEequRo9-mziKbQ" name="defaultValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            <language>C++</language>
            <body>&quot;&lt;html>&lt;head>&lt;title>404 Not Found&lt;/title>&lt;/head>&lt;body>&lt;h1>Not Found&lt;/h1>&lt;p>The requested URL was not found on this server.&lt;/p>&lt;/html>&quot;</body>
          </defaultValue>
        </ownedAttribute>
        <ownedAttribute xmi:type="uml:Property" xmi:id="_NeN6hUezEequRo9-mziKbQ" name="HTTP_DEFAULT_500_HTML" visibility="public" isStatic="true" association="_NeQ90UezEequRo9-mziKbQ">
          <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
          <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N1ZEYEezEequRo9-mziKbQ" name="defaultValue">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            <language>C++</language>
            <body>&quot;&lt;html>&lt;head>&lt;title>500 Internal Error&lt;/title>&lt;/head>&lt;body>&lt;h1>Internal Error&lt;/h1>&lt;p>The server encountered an unexpected condition which prevented it from fulfilling the request.&lt;/p>&lt;/html>&quot;</body>
          </defaultValue>
        </ownedAttribute>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_NeVPQUezEequRo9-mziKbQ" name="check_support" specification="_NeQ91UezEequRo9-mziKbQ" isReentrant="false">
          <language>C++</language>
          <body>		return (((mask &amp; flag) == flag) ? true : false );
</body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N1WoIEezEequRo9-mziKbQ" name="~HTTPUtility" specification="_Nd7moEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N1XPMEezEequRo9-mziKbQ" name="HTTPUtility" specification="_Nd5KYEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body></body>
        </ownedBehavior>
        <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N1gZIEezEequRo9-mziKbQ" name="MapNPTResult" specification="_NeV2UEezEequRo9-mziKbQ" isReentrant="false">
          <language>C/C++</language>
          <body>	switch (result) {
	case NPT_SUCCESS:
		return CMOP_SUCCESS;
	case NPT_FAILURE:
		return CMOP_ERROR;
	case NPT_ERROR_INVALID_PARAMETERS:
		return CMOP_NOTDEFINED_RESULT;
	case NPT_ERROR_PERMISSION_DENIED:
		return CMOP_NOTDEFINED_RESULT;
	case NPT_ERROR_OUT_OF_MEMORY:
		return CMOP_NOTDEFINED_RESULT;
	case NPT_ERROR_NO_SUCH_NAME:
		return CMOP_NOTDEFINED_RESULT;
	case NPT_ERROR_NO_SUCH_PROPERTY:
		return CMOP_NOTDEFINED_RESULT;
	case NPT_ERROR_NO_SUCH_ITEM:
		return CMOP_NO_SUCH_ITEM_ERROR;
		/*case NPT_ERROR_NO_SUCH_CLASS: return &quot;NPT_ERROR_NO_SUCH_CLASS&quot;;
		 case NPT_ERROR_OVERFLOW: return &quot;NPT_ERROR_OVERFLOW&quot;;
		 case NPT_ERROR_INTERNAL: return &quot;NPT_ERROR_INTERNAL&quot;;
		 case NPT_ERROR_INVALID_STATE: return &quot;NPT_ERROR_INVALID_STATE&quot;;
		 case NPT_ERROR_INVALID_FORMAT: return &quot;NPT_ERROR_INVALID_FORMAT&quot;;
		 case NPT_ERROR_INVALID_SYNTAX: return &quot;NPT_ERROR_INVALID_SYNTAX&quot;;
		 case NPT_ERROR_NOT_IMPLEMENTED: return &quot;NPT_ERROR_NOT_IMPLEMENTED&quot;;
		 case NPT_ERROR_NOT_SUPPORTED: return &quot;NPT_ERROR_NOT_SUPPORTED&quot;;
		 case NPT_ERROR_TIMEOUT: return &quot;NPT_ERROR_TIMEOUT&quot;;
		 case NPT_ERROR_WOULD_BLOCK: return &quot;NPT_ERROR_WOULD_BLOCK&quot;;
		 case NPT_ERROR_TERMINATED: return &quot;NPT_ERROR_TERMINATED&quot;;
		 case NPT_ERROR_OUT_OF_RANGE: return &quot;NPT_ERROR_OUT_OF_RANGE&quot;;
		 case NPT_ERROR_OUT_OF_RESOURCES: return &quot;NPT_ERROR_OUT_OF_RESOURCES&quot;;
		 case NPT_ERROR_NOT_ENOUGH_SPACE: return &quot;NPT_ERROR_NOT_ENOUGH_SPACE&quot;;
		 case NPT_ERROR_INTERRUPTED: return &quot;NPT_ERROR_INTERRUPTED&quot;;
		 case NPT_ERROR_CANCELLED: return &quot;NPT_ERROR_CANCELLED&quot;;
		 case NPT_ERROR_LIST_EMPTY: return &quot;NPT_ERROR_LIST_EMPTY&quot;;
		 case NPT_ERROR_LIST_OPERATION_ABORTED: return &quot;NPT_ERROR_LIST_OPERATION_ABORTED&quot;;
		 case NPT_ERROR_LIST_OPERATION_CONTINUE: return &quot;NPT_ERROR_LIST_OPERATION_CONTINUE&quot;;
		 case NPT_ERROR_NO_SUCH_FILE: return &quot;NPT_ERROR_NO_SUCH_FILE&quot;;
		 case NPT_ERROR_FILE_NOT_OPEN: return &quot;NPT_ERROR_FILE_NOT_OPEN&quot;;
		 case NPT_ERROR_FILE_BUSY: return &quot;NPT_ERROR_FILE_BUSY&quot;;
		 case NPT_ERROR_FILE_ALREADY_OPEN: return &quot;NPT_ERROR_FILE_ALREADY_OPEN&quot;;
		 case NPT_ERROR_FILE_NOT_READABLE: return &quot;NPT_ERROR_FILE_NOT_READABLE&quot;;
		 case NPT_ERROR_FILE_NOT_WRITABLE: return &quot;NPT_ERROR_FILE_NOT_WRITABLE&quot;;
		 case NPT_ERROR_FILE_NOT_DIRECTORY: return &quot;NPT_ERROR_FILE_NOT_DIRECTORY&quot;;
		 case NPT_ERROR_FILE_ALREADY_EXISTS: return &quot;NPT_ERROR_FILE_ALREADY_EXISTS&quot;;
		 case NPT_ERROR_FILE_NOT_ENOUGH_SPACE: return &quot;NPT_ERROR_FILE_NOT_ENOUGH_SPACE&quot;;
		 case NPT_ERROR_DIRECTORY_NOT_EMPTY: return &quot;NPT_ERROR_DIRECTORY_NOT_EMPTY&quot;;
		 case NPT_ERROR_READ_FAILED: return &quot;NPT_ERROR_READ_FAILED&quot;;
		 case NPT_ERROR_WRITE_FAILED: return &quot;NPT_ERROR_WRITE_FAILED&quot;;
		 case NPT_ERROR_EOS: return &quot;NPT_ERROR_EOS&quot;;
		 case NPT_ERROR_CONNECTION_RESET: return &quot;NPT_ERROR_CONNECTION_RESET&quot;;
		 case NPT_ERROR_CONNECTION_ABORTED: return &quot;NPT_ERROR_CONNECTION_ABORTED&quot;;
		 case NPT_ERROR_CONNECTION_REFUSED: return &quot;NPT_ERROR_CONNECTION_REFUSED&quot;;
		 case NPT_ERROR_CONNECTION_FAILED: return &quot;NPT_ERROR_CONNECTION_FAILED&quot;;
		 case NPT_ERROR_HOST_UNKNOWN: return &quot;NPT_ERROR_HOST_UNKNOWN&quot;;
		 case NPT_ERROR_SOCKET_FAILED: return &quot;NPT_ERROR_SOCKET_FAILED&quot;;
		 case NPT_ERROR_GETSOCKOPT_FAILED: return &quot;NPT_ERROR_GETSOCKOPT_FAILED&quot;;
		 case NPT_ERROR_SETSOCKOPT_FAILED: return &quot;NPT_ERROR_SETSOCKOPT_FAILED&quot;;
		 case NPT_ERROR_SOCKET_CONTROL_FAILED: return &quot;NPT_ERROR_SOCKET_CONTROL_FAILED&quot;;
		 case NPT_ERROR_BIND_FAILED: return &quot;NPT_ERROR_BIND_FAILED&quot;;
		 case NPT_ERROR_LISTEN_FAILED: return &quot;NPT_ERROR_LISTEN_FAILED&quot;;
		 case NPT_ERROR_ACCEPT_FAILED: return &quot;NPT_ERROR_ACCEPT_FAILED&quot;;
		 case NPT_ERROR_ADDRESS_IN_USE: return &quot;NPT_ERROR_ADDRESS_IN_USE&quot;;
		 case NPT_ERROR_NETWORK_DOWN: return &quot;NPT_ERROR_NETWORK_DOWN&quot;;
		 case NPT_ERROR_NETWORK_UNREACHABLE: return &quot;NPT_ERROR_NETWORK_UNREACHABLE&quot;;
		 case NPT_ERROR_HOST_UNREACHABLE: return &quot;NPT_ERROR_HOST_UNREACHABLE&quot;;
		 case NPT_ERROR_NO_SUCH_INTERFACE: return &quot;NPT_ERROR_NO_SUCH_INTERFACE&quot;;
		 case NPT_ERROR_XML_INVALID_NESTING: return &quot;NPT_ERROR_XML_INVALID_NESTING&quot;;
		 case NPT_ERROR_XML_TAG_MISMATCH: return &quot;NPT_ERROR_XML_TAG_MISMATCH&quot;;
		 case NPT_ERROR_HTTP_INVALID_RESPONSE_LINE: return &quot;NPT_ERROR_HTTP_INVALID_RESPONSE_LINE&quot;;
		 case NPT_ERROR_HTTP_INVALID_REQUEST_LINE: return &quot;NPT_ERROR_HTTP_INVALID_REQUEST_LINE&quot;;
		 case NPT_ERROR_HTTP_NO_PROXY: return &quot;NPT_ERROR_HTTP_NO_PROXY&quot;;
		 case NPT_ERROR_HTTP_INVALID_REQUEST: return &quot;NPT_ERROR_HTTP_INVALID_REQUEST&quot;;
		 case NPT_ERROR_HTTP_METHOD_NOT_SUPPORTED: return &quot;NPT_ERROR_HTTP_METHOD_NOT_SUPPORTED&quot;;
		 case NPT_ERROR_HTTP_TOO_MANY_REDIRECTS: return &quot;NPT_ERROR_HTTP_TOO_MANY_REDIRECTS&quot;;
		 case NPT_ERROR_HTTP_TOO_MANY_RECONNECTS: return &quot;NPT_ERROR_HTTP_TOO_MANY_RECONNECTS&quot;;
		 case NPT_ERROR_HTTP_CANNOT_RESEND_BODY: return &quot;NPT_ERROR_HTTP_CANNOT_RESEND_BODY&quot;;
		 case NPT_ERROR_CALLBACK_HANDLER_SHUTDOWN: return &quot;NPT_ERROR_CALLBACK_HANDLER_SHUTDOWN&quot;;
		 case NPT_ERROR_CALLBACK_NOTHING_PENDING: return &quot;NPT_ERROR_CALLBACK_NOTHING_PENDING&quot;;
		 case NPT_ERROR_NO_SUCH_SERIAL_PORT: return &quot;NPT_ERROR_NO_SUCH_SERIAL_PORT&quot;;
		 case NPT_ERROR_SERIAL_PORT_NOT_OPEN: return &quot;NPT_ERROR_SERIAL_PORT_NOT_OPEN&quot;;
		 case NPT_ERROR_SERIAL_PORT_ALREADY_OPEN: return &quot;NPT_ERROR_SERIAL_PORT_ALREADY_OPEN&quot;;
		 case NPT_ERROR_SERIAL_PORT_BUSY: return &quot;NPT_ERROR_SERIAL_PORT_BUSY&quot;;
		 case NPT_ERROR_INVALID_PASSWORD: return &quot;NPT_ERROR_INVALID_PASSWORD&quot;;
		 case NPT_ERROR_TLS_INVALID_HANDSHAKE: return &quot;NPT_ERROR_TLS_INVALID_HANDSHAKE&quot;;
		 case NPT_ERROR_TLS_INVALID_PROTOCOL_MESSAGE: return &quot;NPT_ERROR_TLS_INVALID_PROTOCOL_MESSAGE&quot;;
		 case NPT_ERROR_TLS_INVALID_HMAC: return &quot;NPT_ERROR_TLS_INVALID_HMAC&quot;;
		 case NPT_ERROR_TLS_INVALID_VERSION: return &quot;NPT_ERROR_TLS_INVALID_VERSION&quot;;
		 case NPT_ERROR_TLS_INVALID_SESSION: return &quot;NPT_ERROR_TLS_INVALID_SESSION&quot;;
		 case NPT_ERROR_TLS_NO_CIPHER: return &quot;NPT_ERROR_TLS_NO_CIPHER&quot;;
		 case NPT_ERROR_TLS_BAD_CERTIFICATE: return &quot;NPT_ERROR_TLS_BAD_CERTIFICATE&quot;;
		 case NPT_ERROR_TLS_INVALID_KEY: return &quot;NPT_ERROR_TLS_INVALID_KEY&quot;;
		 case NPT_ERROR_TLS_NO_CLIENT_RENEGOTIATION: return &quot;NPT_ERROR_TLS_NO_CLIENT_RENEGOTIATION&quot;;
		 case NPT_ERROR_TLS_INVALID_FINISHED_MESSAGE: return &quot;NPT_ERROR_TLS_INVALID_FINISHED_MESSAGE&quot;;
		 case NPT_ERROR_TLS_NO_CERTIFICATE_DEFINED: return &quot;NPT_ERROR_TLS_NO_CERTIFICATE_DEFINED&quot;;
		 case NPT_ERROR_TLS_ALERT_HANDSHAKE_FAILED: return &quot;NPT_ERROR_TLS_ALERT_HANDSHAKE_FAILED&quot;;
		 case NPT_ERROR_TLS_ALERT_BAD_CERTIFICATE: return &quot;NPT_ERROR_TLS_ALERT_BAD_CERTIFICATE&quot;;
		 case NPT_ERROR_TLS_ALERT_INVALID_VERSION: return &quot;NPT_ERROR_TLS_ALERT_INVALID_VERSION&quot;;
		 case NPT_ERROR_TLS_ALERT_BAD_RECORD_MAC: return &quot;NPT_ERROR_TLS_ALERT_BAD_RECORD_MAC&quot;;
		 case NPT_ERROR_TLS_ALERT_DECODE_ERROR: return &quot;NPT_ERROR_TLS_ALERT_DECODE_ERROR&quot;;
		 case NPT_ERROR_TLS_ALERT_DECRYPT_ERROR: return &quot;NPT_ERROR_TLS_ALERT_DECRYPT_ERROR&quot;;
		 case NPT_ERROR_TLS_ALERT_ILLEGAL_PARAMETER: return &quot;NPT_ERROR_TLS_ALERT_ILLEGAL_PARAMETER&quot;;
		 case NPT_ERROR_TLS_ALERT_UNEXPECTED_MESSAGE: return &quot;NPT_ERROR_TLS_ALERT_UNEXPECTED_MESSAGE&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_FAILURE: return &quot;NPT_ERROR_TLS_CERTIFICATE_FAILURE&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_NO_TRUST_ANCHOR: return &quot;NPT_ERROR_TLS_CERTIFICATE_NO_TRUST_ANCHOR&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_BAD_SIGNATURE: return &quot;NPT_ERROR_TLS_CERTIFICATE_BAD_SIGNATURE&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_NOT_YET_VALID: return &quot;NPT_ERROR_TLS_CERTIFICATE_NOT_YET_VALID&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_EXPIRED: return &quot;NPT_ERROR_TLS_CERTIFICATE_EXPIRED&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_SELF_SIGNED: return &quot;NPT_ERROR_TLS_CERTIFICATE_SELF_SIGNED&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_INVALID_CHAIN: return &quot;NPT_ERROR_TLS_CERTIFICATE_INVALID_CHAIN&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_UNSUPPORTED_DIGEST: return &quot;NPT_ERROR_TLS_CERTIFICATE_UNSUPPORTED_DIGEST&quot;;
		 case NPT_ERROR_TLS_CERTIFICATE_INVALID_PRIVATE_KEY: return &quot;NPT_ERROR_TLS_CERTIFICATE_INVALID_PRIVATE_KEY&quot;;
		 case NPT_ERROR_TLS_DNS_NAME_MISMATCH: return &quot;NPT_ERROR_TLS_DNS_NAME_MISMATCH&quot;;*/

	default:
		return CMOP_UNKNOWN_RESULT;
	}</body>
        </ownedBehavior>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_Nd5KYEezEequRo9-mziKbQ" name="HTTPUtility" visibility="public" method="_N1XPMEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_Nd7moEezEequRo9-mziKbQ" name="~HTTPUtility" visibility="public" method="_N1WoIEezEequRo9-mziKbQ"/>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NeQ91UezEequRo9-mziKbQ" name="check_support" visibility="public" isStatic="true" method="_NeVPQUezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NeUBIEezEequRo9-mziKbQ" name="ret" direction="return">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NeUoMEezEequRo9-mziKbQ" name="mask">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          </ownedParameter>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NeVPQEezEequRo9-mziKbQ" name="flag">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_7wRIABydEduyofBvg4RL2w"/>
          </ownedParameter>
        </ownedOperation>
        <ownedOperation xmi:type="uml:Operation" xmi:id="_NeV2UEezEequRo9-mziKbQ" name="MapNPTResult" visibility="public" isStatic="true" method="_N1gZIEezEequRo9-mziKbQ">
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NeWdYEezEequRo9-mziKbQ" name="ret" type="_M2yuIEezEequRo9-mziKbQ" direction="return"/>
          <ownedParameter xmi:type="uml:Parameter" xmi:id="_NeWdYUezEequRo9-mziKbQ" name="result" type="_NMsFoEezEequRo9-mziKbQ"/>
        </ownedOperation>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_Nd_4EUezEequRo9-mziKbQ" name="A_HTTP_DEFAULT_MAX_THREADS_WORKERS_hTTPUtility" memberEnd="_Nd-C4UezEequRo9-mziKbQ _Nd_4EkezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_Nd_4EkezEequRo9-mziKbQ" name="hTTPUtility" type="_NbwcYEezEequRo9-mziKbQ" association="_Nd_4EUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_Nd_4E0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Nd_4FEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NeBtQUezEequRo9-mziKbQ" name="A_HTTP_SERVER_PORT_NUMBER_hTTPUtility" memberEnd="_Nd_4FUezEequRo9-mziKbQ _NeBtQkezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NeBtQkezEequRo9-mziKbQ" name="hTTPUtility" type="_NbwcYEezEequRo9-mziKbQ" association="_NeBtQUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NeBtQ0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NeBtREezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NeEwkUezEequRo9-mziKbQ" name="A_HTTP_SERVER_NAME_VERSION_NUMBER_hTTPUtility" memberEnd="_NeBtRUezEequRo9-mziKbQ _NeEwkkezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NeEwkkezEequRo9-mziKbQ" name="hTTPUtility" type="_NbwcYEezEequRo9-mziKbQ" association="_NeEwkUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NeEwk0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NeEwlEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NeIa8UezEequRo9-mziKbQ" name="A_APP_SERVER_NAME_hTTPUtility" memberEnd="_NeEwlUezEequRo9-mziKbQ _NeIa8kezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NeIa8kezEequRo9-mziKbQ" name="hTTPUtility" type="_NbwcYEezEequRo9-mziKbQ" association="_NeIa8UezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NeIa80ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NeIa9EezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NeLeQEezEequRo9-mziKbQ" name="A_HTTP_DEFAULT_403_HTML_hTTPUtility" memberEnd="_NeIa9UezEequRo9-mziKbQ _NeLeQUezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NeLeQUezEequRo9-mziKbQ" name="hTTPUtility" type="_NbwcYEezEequRo9-mziKbQ" association="_NeLeQEezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NeLeQkezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NeLeQ0ezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NeN6gUezEequRo9-mziKbQ" name="A_HTTP_DEFAULT_404_HTML_hTTPUtility" memberEnd="_NeLeREezEequRo9-mziKbQ _NeN6gkezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NeN6gkezEequRo9-mziKbQ" name="hTTPUtility" type="_NbwcYEezEequRo9-mziKbQ" association="_NeN6gUezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NeN6g0ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NeN6hEezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Association" xmi:id="_NeQ90UezEequRo9-mziKbQ" name="A_HTTP_DEFAULT_500_HTML_hTTPUtility" memberEnd="_NeN6hUezEequRo9-mziKbQ _NeQ90kezEequRo9-mziKbQ">
        <ownedEnd xmi:type="uml:Property" xmi:id="_NeQ90kezEequRo9-mziKbQ" name="hTTPUtility" type="_NbwcYEezEequRo9-mziKbQ" association="_NeQ90UezEequRo9-mziKbQ">
          <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_NeQ900ezEequRo9-mziKbQ" value="1"/>
          <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_NeQ91EezEequRo9-mziKbQ" value="1"/>
        </ownedEnd>
      </packagedElement>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NnUzMEezEequRo9-mziKbQ" client="_NDMycEezEequRo9-mziKbQ" supplier="_NDMycEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NnYdkEezEequRo9-mziKbQ" client="_NDMycEezEequRo9-mziKbQ" supplier="_M4_tkEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NpsxwEezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NRo3EUezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NpvOAEezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NptY0EezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NpxqQEezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NMsFoEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Npy4YEezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NYj-cEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Np0GgEezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NZDtsEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Np0tkEezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NR0dQEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Np1UoUezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NVCwYEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Np17sEezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NVElkEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Np17sUezEequRo9-mziKbQ" client="_NNA1wEezEequRo9-mziKbQ" supplier="_NVGawEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NtdQYUezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NU4_YUezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Ntg6wEezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NU7boEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Nthh0EezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NRrTUUezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Ntj-EUezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NbsK8EezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NtnBYEezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NtklIEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NtnocEezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NMsFoEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NtnocUezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NDMycEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NtpdoUezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NtoPgEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NttIAUezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NtqrwEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Ntu9MEezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NYVU8EezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NtvkQEezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NMqQcEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NtwyYEezEequRo9-mziKbQ" client="_NR0dQEezEequRo9-mziKbQ" supplier="_NVCwYEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NyYzsUezEequRo9-mziKbQ" client="_NVaj0EezEequRo9-mziKbQ" supplier="_NDMycEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NydFIUezEequRo9-mziKbQ" client="_NVaj0EezEequRo9-mziKbQ" supplier="_NybP8EezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_Nye6UEezEequRo9-mziKbQ" client="_NVaj0EezEequRo9-mziKbQ" supplier="_NMJTEEezEequRo9-mziKbQ"/>
      <packagedElement xmi:type="uml:Usage" xmi:id="_NykZ4EezEequRo9-mziKbQ" client="_NVaj0EezEequRo9-mziKbQ" supplier="_NMeqQEezEequRo9-mziKbQ"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_N1hAMEezEequRo9-mziKbQ" name="Tests">
      <packagedElement xmi:type="uml:Package" xmi:id="_N1hAMUezEequRo9-mziKbQ" name="ByServer">
        <packagedElement xmi:type="uml:Class" xmi:id="_N1hAMkezEequRo9-mziKbQ" name="RootHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N3cS0kezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N3bEsEezEequRo9-mziKbQ" name="RootHandler" specification="_N3UXAEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N3cS0UezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N3bEsUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>return HANDLERSTYPES::HANDLER_STATIC;</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N3UXAEezEequRo9-mziKbQ" name="RootHandler" visibility="public" method="_N3bEsEezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N3YBYEezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N3bEsUezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N3cS0UezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N3cS0EezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_N3evEEezEequRo9-mziKbQ" name="AstrixHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N3yRE0ezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N3hLUUezEequRo9-mziKbQ" name="AstrixHandler" specification="_N3evEUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N3jAgUezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N3hyYEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>return HANDLERSTYPES::HANDLER_ASTERISK;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N3q8UUezEequRo9-mziKbQ" name="OnRead" specification="_N3jAgkezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
			NPT_System::GetCurrentTimeStamp(ts);
			NPT_DateTime  l_creationDate;
			l_creationDate.FromTimeStamp(ts);
			NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnReadHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
			NPT_HttpEntity* entity = response.GetEntity();
			entity->SetContentType(&quot;text/html&quot;);
			entity->SetInputStream(msg);
			NPT_LOG_INFO_2( &quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());

</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N3evEUezEequRo9-mziKbQ" name="AstrixHandler" visibility="public" method="_N3hLUUezEequRo9-mziKbQ"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N3hyYEezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N3jAgUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N3jAgEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N3jAgkezEequRo9-mziKbQ" name="OnRead" visibility="public" method="_N3q8UUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N3mq4UezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N3n5AUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N3qVQEezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N3vNwEezEequRo9-mziKbQ" client="_N3evEEezEequRo9-mziKbQ" supplier="_N3t_oEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N3wb4UezEequRo9-mziKbQ" client="_N3evEEezEequRo9-mziKbQ" supplier="_N3vNwUezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N3yREUezEequRo9-mziKbQ" client="_N3evEEezEequRo9-mziKbQ" supplier="_N3xC8EezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N3yREkezEequRo9-mziKbQ" client="_N3evEEezEequRo9-mziKbQ" supplier="_NtqrwEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_N33woEezEequRo9-mziKbQ" name="OnCreateHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N4KrkkezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N3-eUEezEequRo9-mziKbQ" name="OnCreateHandler" specification="_N33woUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N4ATgUezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N3-eUUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>return HANDLERSTYPES::HANDLER_STATIC;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N4JdcUezEequRo9-mziKbQ" name="OnCreate" specification="_N4ATgkezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnCreateHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2( &quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N33woUezEequRo9-mziKbQ" name="OnCreateHandler" visibility="public" method="_N3-eUEezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N36z8EezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N3-eUUezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N4ATgUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4ATgEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4ATgkezEequRo9-mziKbQ" name="OnCreate" visibility="private" method="_N4JdcUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4Ek8UezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4FzEUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4IPUUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N4KEgEezEequRo9-mziKbQ" client="_N33woEezEequRo9-mziKbQ" supplier="_N3t_oEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N4KEgUezEequRo9-mziKbQ" client="_N33woEezEequRo9-mziKbQ" supplier="_N3vNwUezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N4KrkEezEequRo9-mziKbQ" client="_N33woEezEequRo9-mziKbQ" supplier="_N3xC8EezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N4KrkUezEequRo9-mziKbQ" client="_N33woEezEequRo9-mziKbQ" supplier="_NtqrwEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_N4NH0UezEequRo9-mziKbQ" name="ErrorHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N4fbsEezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N4TOcUezEequRo9-mziKbQ" name="ErrorHandler" specification="_N4NH0kezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N4VDoEezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N4TOckezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>return HANDLERSTYPES::HANDLER_STATIC;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N4eNkUezEequRo9-mziKbQ" name="OnRead" specification="_N4VDoUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnReadHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2(&quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4NH0kezEequRo9-mziKbQ" name="ErrorHandler" visibility="public" method="_N4TOcUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4QLIEezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4TOckezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N4VDoEezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4UckEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4VDoUezEequRo9-mziKbQ" name="OnRead" visibility="private" method="_N4eNkUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4ZVEUezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4ajMUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4c_cUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N4e0oEezEequRo9-mziKbQ" client="_N4NH0UezEequRo9-mziKbQ" supplier="_N3t_oEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N4e0oUezEequRo9-mziKbQ" client="_N4NH0UezEequRo9-mziKbQ" supplier="_N3vNwUezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N4e0okezEequRo9-mziKbQ" client="_N4NH0UezEequRo9-mziKbQ" supplier="_N3xC8EezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N4e0o0ezEequRo9-mziKbQ" client="_N4NH0UezEequRo9-mziKbQ" supplier="_NtqrwEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_N4h38EezEequRo9-mziKbQ" name="OnReadHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N5N0ckezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N4n-kEezEequRo9-mziKbQ" name="OnReadHandler" specification="_N4h38UezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N4pMsUezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N4n-kUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>return HANDLERSTYPES::HANDLER_STATIC;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N5MmUUezEequRo9-mziKbQ" name="OnRead" specification="_N4pMskezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnReadHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2(&quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4h38UezEequRo9-mziKbQ" name="OnReadHandler" visibility="public" method="_N4n-kEezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4k7QEezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4n-kUezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N4pMsUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N4pMsEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N4pMskezEequRo9-mziKbQ" name="OnRead" visibility="private" method="_N5MmUUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5I78EezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5KKEEezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5L_QEezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N5NNYEezEequRo9-mziKbQ" client="_N4h38EezEequRo9-mziKbQ" supplier="_N3t_oEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N5NNYUezEequRo9-mziKbQ" client="_N4h38EezEequRo9-mziKbQ" supplier="_N3vNwUezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N5N0cEezEequRo9-mziKbQ" client="_N4h38EezEequRo9-mziKbQ" supplier="_N3xC8EezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N5N0cUezEequRo9-mziKbQ" client="_N4h38EezEequRo9-mziKbQ" supplier="_NtqrwEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_N5QQsEezEequRo9-mziKbQ" name="OnUpdateHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N5ikk0ezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N5W-YEezEequRo9-mziKbQ" name="OnUpdateHandler" specification="_N5QQsUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N5YzkUezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N5XlcEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>return HANDLERSTYPES::HANDLER_STATIC;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N5h9gEezEequRo9-mziKbQ" name="OnUpdate" specification="_N5YzkkezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnUpdateHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2(&quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N5QQsUezEequRo9-mziKbQ" name="OnUpdateHandler" visibility="public" method="_N5W-YEezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5UiIEezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N5XlcEezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N5YzkUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5YzkEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N5YzkkezEequRo9-mziKbQ" name="OnUpdate" visibility="private" method="_N5h9gEezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5dFAUezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5eTIUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5gvYEezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N5h9gUezEequRo9-mziKbQ" client="_N5QQsEezEequRo9-mziKbQ" supplier="_N3t_oEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N5ikkEezEequRo9-mziKbQ" client="_N5QQsEezEequRo9-mziKbQ" supplier="_N3vNwUezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N5ikkUezEequRo9-mziKbQ" client="_N5QQsEezEequRo9-mziKbQ" supplier="_N3xC8EezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N5ikkkezEequRo9-mziKbQ" client="_N5QQsEezEequRo9-mziKbQ" supplier="_NtqrwEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_N5lA0UezEequRo9-mziKbQ" name="OnDeleteHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N51fgkezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N5qgYUezEequRo9-mziKbQ" name="OnDeleteHandler" specification="_N5ln4EezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N5sVkUezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N5rHcEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>return HANDLERSTYPES::HANDLER_STATIC;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N504cEezEequRo9-mziKbQ" name="OnDelete" specification="_N5sVkkezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnDeleteHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2(&quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N5ln4EezEequRo9-mziKbQ" name="OnDeleteHandler" visibility="public" method="_N5qgYUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5oEIEezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N5rHcEezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N5sVkUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5sVkEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N5sVkkezEequRo9-mziKbQ" name="OnDelete" visibility="private" method="_N504cEezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5wnAEezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5x1IEezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5zqUEezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N504cUezEequRo9-mziKbQ" client="_N5lA0UezEequRo9-mziKbQ" supplier="_N3t_oEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N504ckezEequRo9-mziKbQ" client="_N5lA0UezEequRo9-mziKbQ" supplier="_N3vNwUezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N51fgEezEequRo9-mziKbQ" client="_N5lA0UezEequRo9-mziKbQ" supplier="_N3xC8EezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N51fgUezEequRo9-mziKbQ" client="_N5lA0UezEequRo9-mziKbQ" supplier="_NtqrwEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_N537wEezEequRo9-mziKbQ" name="OnAllHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N6vecEezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N580QUezEequRo9-mziKbQ" name="OnAllHandler" specification="_N537wUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N5-CYUezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N580QkezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>return HANDLERSTYPES::HANDLER_STATIC;</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N6UAoUezEequRo9-mziKbQ" name="OnCreate" specification="_N5-pcEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnAllHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2(&quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N6dKkUezEequRo9-mziKbQ" name="OnRead" specification="_N6VOwEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		 Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnAllHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2(&quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
 </body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N6ltcUezEequRo9-mziKbQ" name="OnUpdate" specification="_N6dxoEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnAllHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2(&quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N6u3YUezEequRo9-mziKbQ" name="OnDelete" specification="_N6mUgEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>		Test_UNUSED(request);
		Test_UNUSED(context);
		Test_UNUSED(response);
		NPT_TimeStamp ts;
		NPT_System::GetCurrentTimeStamp(ts);
		NPT_DateTime  l_creationDate;
		l_creationDate.FromTimeStamp(ts);
		NPT_String msg =NPT_String::Format(&quot;&lt;HTML> &lt;B> !!!  [%s] GOOD AT OnAllHandler::%s !!! &lt;/B> &lt;/HTML>&quot;,l_creationDate.ToString(NPT_DateTime::FORMAT_W3C),__FUNCTION__);
		NPT_HttpEntity* entity = response.GetEntity();
		entity->SetContentType(&quot;text/html&quot;);
		entity->SetInputStream(msg);
		NPT_LOG_INFO_2(&quot;On A client %s, @@  '%s' !&quot;,this->getSegment(),l_creationDate.ToString(NPT_DateTime::FORMAT_W3C).GetChars());
</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N537wUezEequRo9-mziKbQ" name="OnAllHandler" visibility="public" method="_N580QUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N56_EEezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N580QkezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N5-CYUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N5-CYEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N5-pcEezEequRo9-mziKbQ" name="OnCreate" visibility="private" method="_N6UAoUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6CT0UezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6Dh8UezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6SygUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N6VOwEezEequRo9-mziKbQ" name="OnRead" visibility="private" method="_N6dKkUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6Y5IUezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6aHQkezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6b8cUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N6dxoEezEequRo9-mziKbQ" name="OnUpdate" visibility="private" method="_N6ltcUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6iDEEezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6iqIUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6lGYEezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N6mUgEezEequRo9-mziKbQ" name="OnDelete" visibility="private" method="_N6u3YUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6ql8UezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6r0EkezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N6tpQUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N6UnsEezEequRo9-mziKbQ" client="_N537wEezEequRo9-mziKbQ" supplier="_N3t_oEezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N6UnsUezEequRo9-mziKbQ" client="_N537wEezEequRo9-mziKbQ" supplier="_N3vNwUezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N6UnskezEequRo9-mziKbQ" client="_N537wEezEequRo9-mziKbQ" supplier="_N3xC8EezEequRo9-mziKbQ"/>
        <packagedElement xmi:type="uml:Usage" xmi:id="_N6Uns0ezEequRo9-mziKbQ" client="_N537wEezEequRo9-mziKbQ" supplier="_NtqrwEezEequRo9-mziKbQ"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_N6x6sEezEequRo9-mziKbQ" name="tmp">
        <packagedElement xmi:type="uml:Class" xmi:id="_N6x6sUezEequRo9-mziKbQ" name="IHTTPAsteriskHandler" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_N7qEeEezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_N7o2VEezEequRo9-mziKbQ" name="m_delta" visibility="protected" type="_N3xC8EezEequRo9-mziKbQ" aggregation="composite" association="_N7pdYEezEequRo9-mziKbQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_N7pdZEezEequRo9-mziKbQ" name="m_segment" visibility="protected" type="_N3xC8EezEequRo9-mziKbQ" aggregation="composite" association="_N7pdZUezEequRo9-mziKbQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_N7qEcUezEequRo9-mziKbQ" name="m_methodsSupportMask" visibility="protected" type="_MxDSgEezEequRo9-mziKbQ" aggregation="composite" association="_N7qEckezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N6850EezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N65PckezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>eturn HANDLER_ASTERISK</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N60-AEezEequRo9-mziKbQ" name="IHTTPAsteriskHandler" visibility="public">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N63aQUezEequRo9-mziKbQ" name="methodsSupportMask" type="_MxDSgEezEequRo9-mziKbQ">
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N63aQkezEequRo9-mziKbQ" name="default" type="_MxDSgEezEequRo9-mziKbQ">
                <language>C++</language>
                <body>SUPPORT_NONE</body>
              </defaultValue>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N63aQ0ezEequRo9-mziKbQ" name="~IHTTPAsteriskHandler" visibility="public"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N65PckezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N6850EezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N68SxEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N68500ezEequRo9-mziKbQ" name="operator ==" visibility="public">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7AkMEezEequRo9-mziKbQ" name="ret" direction="return">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7AkMUezEequRo9-mziKbQ" name="other" type="_N3xC8EezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N7DAcEezEequRo9-mziKbQ" name="OnCreate" visibility="public" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7HR4EezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7IgAEezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7KVMUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N7OmoEezEequRo9-mziKbQ" name="OnRead" visibility="public" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7SRAUezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7TfI0ezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7V7YEezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N7WicUezEequRo9-mziKbQ" name="OnUpdate" visibility="public" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7aM0UezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7ba8UezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7d3MEezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N7fFUEezEequRo9-mziKbQ" name="OnDelete" visibility="public" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7ivsEezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7j90EezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7lzAUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N7nBIUezEequRo9-mziKbQ" name="getDelta" visibility="public">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7oPQEezEequRo9-mziKbQ" name="ret" type="_N3xC8EezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N7pdYEezEequRo9-mziKbQ" name="A_m_delta_iHTTPAsteriskHandler" memberEnd="_N7o2VEezEequRo9-mziKbQ _N7pdYUezEequRo9-mziKbQ">
          <ownedEnd xmi:type="uml:Property" xmi:id="_N7pdYUezEequRo9-mziKbQ" name="iHTTPAsteriskHandler" type="_N6x6sUezEequRo9-mziKbQ" association="_N7pdYEezEequRo9-mziKbQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_N7pdYkezEequRo9-mziKbQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_N7pdY0ezEequRo9-mziKbQ" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N7pdZUezEequRo9-mziKbQ" name="A_m_segment_iHTTPAsteriskHandler" memberEnd="_N7pdZEezEequRo9-mziKbQ _N7pdZkezEequRo9-mziKbQ">
          <ownedEnd xmi:type="uml:Property" xmi:id="_N7pdZkezEequRo9-mziKbQ" name="iHTTPAsteriskHandler" type="_N6x6sUezEequRo9-mziKbQ" association="_N7pdZUezEequRo9-mziKbQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_N7pdZ0ezEequRo9-mziKbQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_N7qEcEezEequRo9-mziKbQ" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N7qEckezEequRo9-mziKbQ" name="A_m_methodsSupportMask_iHTTPAsteriskHandler" memberEnd="_N7qEcUezEequRo9-mziKbQ _N7qEc0ezEequRo9-mziKbQ">
          <ownedEnd xmi:type="uml:Property" xmi:id="_N7qEc0ezEequRo9-mziKbQ" name="iHTTPAsteriskHandler" type="_N6x6sUezEequRo9-mziKbQ" association="_N7qEckezEequRo9-mziKbQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_N7qEdEezEequRo9-mziKbQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_N7qEdUezEequRo9-mziKbQ" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_N7sgskezEequRo9-mziKbQ" name="IHTTPBridgeHandler">
          <generalization xmi:type="uml:Generalization" xmi:id="_N8SWkUezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N71qqkezEequRo9-mziKbQ" name="IHTTPBridgeHandler" specification="_N7vkAkezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N73f10ezEequRo9-mziKbQ" name="~IHTTPBridgeHandler" specification="_N71qsEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body></body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N7-Nh0ezEequRo9-mziKbQ" name="OnCreate" specification="_N73f2EezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>* NOT Supported *</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N8E7M0ezEequRo9-mziKbQ" name="OnRead" specification="_N7-NiUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>* NOT Supported *</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N8Lo6kezEequRo9-mziKbQ" name="OnUpdate" specification="_N8E7NUezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>* NOT Supported *</body>
          </ownedBehavior>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N8SWkEezEequRo9-mziKbQ" name="OnDelete" specification="_N8Lo60ezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>* NOT Supported *</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N7vkAkezEequRo9-mziKbQ" name="IHTTPBridgeHandler" visibility="public" method="_N71qqkezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N7yAQEezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N71qsEezEequRo9-mziKbQ" name="~IHTTPBridgeHandler" visibility="public" method="_N73f10ezEequRo9-mziKbQ"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N73f2EezEequRo9-mziKbQ" name="OnCreate" visibility="public" method="_N7-Nh0ezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N758EEezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N77KMEezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N78_ZUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N7-NiUezEequRo9-mziKbQ" name="OnRead" visibility="public" method="_N8E7M0ezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8ApwEezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8B34EezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8DtHEezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8E7NUezEequRo9-mziKbQ" name="OnUpdate" visibility="public" method="_N8Lo6kezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8HXeUezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8IllUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8LB0EezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8Lo60ezEequRo9-mziKbQ" name="OnDelete" visibility="public" method="_N8SWkEezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8OFIEezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8OsMUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8RIcUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_N8Uy0EezEequRo9-mziKbQ" name="IHTTPEventHandler" isAbstract="true">
          <generalization xmi:type="uml:Generalization" xmi:id="_N9P_4UezEequRo9-mziKbQ" general="_M4_tkEezEequRo9-mziKbQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_N8hAEUezEequRo9-mziKbQ" name="m_WaitingClient" visibility="private" type="_NY1rQEezEequRo9-mziKbQ" association="_N8iOMUezEequRo9-mziKbQ"/>
          <ownedAttribute xmi:type="uml:Property" xmi:id="_N8i1QEezEequRo9-mziKbQ" name="m_sendnAnEvent" visibility="private" aggregation="composite" association="_N8jcUEezEequRo9-mziKbQ">
            <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_vAIV4I7PEdySGvm5GN66HA"/>
          </ownedAttribute>
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_N8nGsUezEequRo9-mziKbQ" name="GetMyHandlerType" specification="_N8jcVEezEequRo9-mziKbQ" isReentrant="false">
            <language>C++</language>
            <body>eturn HANDLER_EVENT</body>
          </ownedBehavior>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8XPEEezEequRo9-mziKbQ" name="IHTTPEventHandler" visibility="public">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8cuoEezEequRo9-mziKbQ" name="segment">
              <type xmi:type="uml:PrimitiveType" href="pathmap://PapyrusC_Cpp_LIBRARIES/AnsiCLibrary.uml#_5lVhgBydEduyofBvg4RL2w"/>
            </ownedParameter>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8ej0UezEequRo9-mziKbQ" name="methodsSupportMask" type="_MxDSgEezEequRo9-mziKbQ">
              <defaultValue xmi:type="uml:OpaqueExpression" xmi:id="_N8fK4EezEequRo9-mziKbQ" name="default" type="_MxDSgEezEequRo9-mziKbQ">
                <language>C++</language>
                <body>SUPPORT_NONE</body>
              </defaultValue>
            </ownedParameter>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8fK4UezEequRo9-mziKbQ" name="~IHTTPEventHandler" visibility="public"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8jcVEezEequRo9-mziKbQ" name="GetMyHandlerType" visibility="public" method="_N8nGsUezEequRo9-mziKbQ">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8nGsEezEequRo9-mziKbQ" name="ret" type="_M2qyUEezEequRo9-mziKbQ" direction="return"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8nGskezEequRo9-mziKbQ" name="NotifyWaitingClients" visibility="public"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8o74UezEequRo9-mziKbQ" name="ArmEventToBlockNewClients" visibility="public"/>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8qxEUezEequRo9-mziKbQ" name="PushWaitingclient" visibility="public">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8r_MEezEequRo9-mziKbQ" name="ret" type="_NMsFoEezEequRo9-mziKbQ" direction="return"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8r_MUezEequRo9-mziKbQ" name="m_input" type="_NVCwYEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8r_MkezEequRo9-mziKbQ" name="m_output" type="_NVElkEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8r_M0ezEequRo9-mziKbQ" name="m_context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8tNUUezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8ubcUezEequRo9-mziKbQ" name="OnCreate" visibility="public" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8yF0UezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N8zT8UezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N81JIUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N82XQUezEequRo9-mziKbQ" name="OnRead" visibility="public" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N86BoUezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N87PwUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N89sAUezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N8-6IUezEequRo9-mziKbQ" name="OnUpdate" visibility="public" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N9DLkUezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N9EZsUezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N9G18EezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
          <ownedOperation xmi:type="uml:Operation" xmi:id="_N9HdAUezEequRo9-mziKbQ" name="OnDelete" visibility="public" isAbstract="true">
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N9LucEezEequRo9-mziKbQ" name="request" type="_NbsK8EezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N9M8kEezEequRo9-mziKbQ" name="context" type="_NVGawEezEequRo9-mziKbQ"/>
            <ownedParameter xmi:type="uml:Parameter" xmi:id="_N9PY0EezEequRo9-mziKbQ" name="response" type="_NtklIEezEequRo9-mziKbQ"/>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N8iOMUezEequRo9-mziKbQ" name="A_m_WaitingClient_iHTTPEventHandler" memberEnd="_N8hAEUezEequRo9-mziKbQ _N8iOMkezEequRo9-mziKbQ">
          <ownedEnd xmi:type="uml:Property" xmi:id="_N8iOMkezEequRo9-mziKbQ" name="iHTTPEventHandler" type="_N8Uy0EezEequRo9-mziKbQ" association="_N8iOMUezEequRo9-mziKbQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_N8iOM0ezEequRo9-mziKbQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_N8iONEezEequRo9-mziKbQ" value="1"/>
          </ownedEnd>
        </packagedElement>
        <packagedElement xmi:type="uml:Association" xmi:id="_N8jcUEezEequRo9-mziKbQ" name="A_m_sendnAnEvent_iHTTPEventHandler" memberEnd="_N8i1QEezEequRo9-mziKbQ _N8jcUUezEequRo9-mziKbQ">
          <ownedEnd xmi:type="uml:Property" xmi:id="_N8jcUUezEequRo9-mziKbQ" name="iHTTPEventHandler" type="_N8Uy0EezEequRo9-mziKbQ" association="_N8jcUEezEequRo9-mziKbQ">
            <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_N8jcUkezEequRo9-mziKbQ" value="1"/>
            <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_N8jcU0ezEequRo9-mziKbQ" value="1"/>
          </ownedEnd>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_MvqLYEezEequRo9-mziKbQ">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_Mv4N0EezEequRo9-mziKbQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/papyrus/C_Cpp/1#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://PapyrusC_Cpp_PROFILES/C_Cpp.profile.uml#_j9REUByGEduN1bTiWJ0lyw"/>
    </profileApplication>
    <profileApplication xmi:type="uml:ProfileApplication" xmi:id="_MwhuEEezEequRo9-mziKbQ">
      <eAnnotations xmi:type="ecore:EAnnotation" xmi:id="_MwiVIEezEequRo9-mziKbQ" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="http://www.eclipse.org/uml2/5.0.0/UML/Profile/Standard#/"/>
      </eAnnotations>
      <appliedProfile xmi:type="uml:Profile" href="pathmap://UML_PROFILES/Standard.profile.uml#_0"/>
    </profileApplication>
  </uml:Model>
  <C_Cpp:Typedef xmi:id="_M2l50EezEequRo9-mziKbQ" definition=" enum {&#xA;SUPPORT_NONE &#x9;= 0x0,&#x9;&#x9;/*!&lt; Do not support Any Methods. */&#xA;SUPPORT_PUT   &#x9;= 0x1000,&#x9;/*!&lt; support for PUT Method. */&#xA;SUPPORT_GET   &#x9;= 0x0100,&#x9;/*!&lt; support for GET Method. */&#xA;SUPPORT_POST   &#x9;= 0x0010,&#x9;/*!&lt; support for POST Method. */&#xA;SUPPORT_DELETE  = 0x0001,&#x9;/*!&lt; support for DELETE Method. */&#xA;SUPPORT_ALL     = SUPPORT_PUT|SUPPORT_GET|SUPPORT_POST|SUPPORT_DELETE&#x9;/*!&lt; support for ALL Method. */&#xA;} typeName" base_primitivetype="_MxDSgEezEequRo9-mziKbQ"/>
  <C_Cpp:Typedef xmi:id="_M2w48EezEequRo9-mziKbQ" definition=" enum  {&#xA;HANDLER_STATIC &#x9;&#x9;= 0x0,  &#x9;/*!&lt; define Static Handler */&#xA;HANDLER_EVENT  &#x9;&#x9;= 0x1000,   /*!&lt; define the Events Handler. */&#xA;HANDLER_ASTERISK   &#x9;= 0x0100 &#x9;/*!&lt; define the Asterisk Handler. */&#xA;} typeName" base_primitivetype="_M2qyUEezEequRo9-mziKbQ"/>
  <C_Cpp:Typedef xmi:id="_M29GMEezEequRo9-mziKbQ" definition=" enum&#xA;{&#xA;   CMOP_SUCCESS   = 0,&#xA;   CMOP_ERROR     ,&#xA;   CMOP_UNKNOWN_RESULT,&#xA;   CMOP_NO_SUCH_ITEM_ERROR,&#xA;   CMOP_NOTDEFINED_RESULT&#xA;} typeName" base_primitivetype="_M2yuIEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_M379oEezEequRo9-mziKbQ" base_BehavioralFeature="_M3kKMEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_M4D5cEezEequRo9-mziKbQ" initialisation="m_Address(0)" base_operation="_M3kKMEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_M4bs4EezEequRo9-mziKbQ" base_BehavioralFeature="_M4VmQEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_M4glYEezEequRo9-mziKbQ" initialisation="m_Address(address)" base_operation="_M4VmQEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_M4un0EezEequRo9-mziKbQ" base_BehavioralFeature="_M4josUezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_M4-fcEezEequRo9-mziKbQ" header="#define CMOPRESTSERVER_H_ " base_class="_M29tQEezEequRo9-mziKbQ" base_Classifier="_M29tQEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_M5D_AEezEequRo9-mziKbQ" base_BehavioralFeature="_M4_tkUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_M5HpYEezEequRo9-mziKbQ" base_parameter="_M5FNIEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_M5O-IEezEequRo9-mziKbQ" base_BehavioralFeature="_M5IQckezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_M5WS4EezEequRo9-mziKbQ" base_operation="_M5QMQUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_M5gq8EezEequRo9-mziKbQ" base_operation="_M5Z9QUezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_M5juQEezEequRo9-mziKbQ" base_BehavioralFeature="_M5Z9QUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_M5rDAEezEequRo9-mziKbQ" base_operation="_M5juQUezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_M_A2AEezEequRo9-mziKbQ" header="#define CMOPRESTSERVER_H_ " base_class="_M4_tkEezEequRo9-mziKbQ" base_Classifier="_M4_tkEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_M_GVkEezEequRo9-mziKbQ" base_operation="_M_BdEUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_M_ORYEezEequRo9-mziKbQ" base_operation="_M_Ix0EezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_M_UYAEezEequRo9-mziKbQ" base_operation="_M_QGkUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_M_jokEezEequRo9-mziKbQ" base_parameter="_M_fXIEezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_M_pIIEezEequRo9-mziKbQ" header="#define CMOPRESTSERVER_H_ " base_class="_M_BdEEezEequRo9-mziKbQ" base_Classifier="_M_BdEEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_M_vOwEezEequRo9-mziKbQ" base_parameter="_M_tZkEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_M_4YsEezEequRo9-mziKbQ" base_parameter="_M_0uUEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_M_8DEEezEequRo9-mziKbQ" base_BehavioralFeature="_M_4_wEezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_NAA7kEezEequRo9-mziKbQ" base_BehavioralFeature="_M_8DEUezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_NADX0EezEequRo9-mziKbQ" header="#define CMOPRESTSERVER_H_ " base_class="_M_pvMEezEequRo9-mziKbQ" base_Classifier="_M_pvMEezEequRo9-mziKbQ"/>
  <C_Cpp:NoCodeGen xmi:id="_NAIQUEezEequRo9-mziKbQ" base_element="_NAF0EEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NALToEezEequRo9-mziKbQ" base_Classifier="_NAIQUUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NANI0EezEequRo9-mziKbQ" base_parameter="_NALToUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NARaQEezEequRo9-mziKbQ" base_Classifier="_NAPlEEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NAUdkEezEequRo9-mziKbQ" base_parameter="_NARaQUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NAYvAEezEequRo9-mziKbQ" base_parameter="_NARaQUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NAkVMEezEequRo9-mziKbQ" base_Classifier="_NAigAEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NAmKYEezEequRo9-mziKbQ" base_parameter="_NAkVMUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_NArC4EezEequRo9-mziKbQ" base_operation="_NAmKYUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NA33MEezEequRo9-mziKbQ" base_parameter="_NA2CAEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NBBoMEezEequRo9-mziKbQ" base_parameter="_NA_zAEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NBEEcEezEequRo9-mziKbQ" base_parameter="_NA_zAEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NBJkAEezEequRo9-mziKbQ" base_parameter="_NBIV4EezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_NBPDkEezEequRo9-mziKbQ" base_operation="_NBKLEEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NBYNgEezEequRo9-mziKbQ" base_parameter="_NBWYUEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NBbQ0EezEequRo9-mziKbQ" base_parameter="_NBaCsEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NBdGAEezEequRo9-mziKbQ" base_parameter="_NBaCsEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NBgJUEezEequRo9-mziKbQ" base_parameter="_NBe7MEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_NBjzsEezEequRo9-mziKbQ" base_operation="_NBgJUUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NBrvgEezEequRo9-mziKbQ" base_parameter="_NBp6UEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NBuy0EezEequRo9-mziKbQ" base_parameter="_NBs9oEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NBwA8EezEequRo9-mziKbQ" base_parameter="_NBs9oEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NB0SYEezEequRo9-mziKbQ" base_parameter="_NBzEQEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_NB38wEezEequRo9-mziKbQ" base_operation="_NB05cEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NCDi8EezEequRo9-mziKbQ" base_parameter="_NCBtwEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NCb9cEezEequRo9-mziKbQ" base_parameter="_NCWd4EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NCjSMEezEequRo9-mziKbQ" base_parameter="_NCWd4EezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NCvfcEezEequRo9-mziKbQ" base_parameter="_NCtqQEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NCyiwEezEequRo9-mziKbQ" base_parameter="_NCtqQEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NC20MEezEequRo9-mziKbQ" base_parameter="_NC0_AEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NC-wAEezEequRo9-mziKbQ" base_parameter="_NC4CUEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NDAlMEezEequRo9-mziKbQ" base_parameter="_NC4CUEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NDEPkEezEequRo9-mziKbQ" base_parameter="_NDBzUEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NDGEwEezEequRo9-mziKbQ" base_parameter="_NDBzUEezEequRo9-mziKbQ"/>
  <C_Cpp:Array xmi:id="_NDJvIEezEequRo9-mziKbQ" definition="[HTTP_MAX_SEGMENT_LENGTH]" base_property="_NDGEwUezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_NLzU0EezEequRo9-mziKbQ" base_BehavioralFeature="_NLvqcEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_NL1xEEezEequRo9-mziKbQ" base_BehavioralFeature="_NLzU0UezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_NL40YEezEequRo9-mziKbQ" base_BehavioralFeature="_NL2YIEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NL6CgEezEequRo9-mziKbQ" base_parameter="_NL40YUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NL-7AEezEequRo9-mziKbQ" base_parameter="_NL9s4UezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NMAJIEezEequRo9-mziKbQ" base_parameter="_NL9s4UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NMEakEezEequRo9-mziKbQ" base_parameter="_NMDMcUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NMFosEezEequRo9-mziKbQ" base_parameter="_NMDMcUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NMKhMEezEequRo9-mziKbQ" base_Classifier="_NMJTEEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NMLvUEezEequRo9-mziKbQ" base_parameter="_NMKhMUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NMM9cEezEequRo9-mziKbQ" base_parameter="_NMKhMUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NMQn0EezEequRo9-mziKbQ" base_parameter="_NMPZsEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NMSdAEezEequRo9-mziKbQ" base_parameter="_NMQn0UezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NMVgUEezEequRo9-mziKbQ" base_parameter="_NMUSMEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NMeDMEezEequRo9-mziKbQ" base_Classifier="_NMc1EEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NMkw4EezEequRo9-mziKbQ" base_parameter="_NMi7sUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NMmmEEezEequRo9-mziKbQ" base_parameter="_NMi7sUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NMppYEezEequRo9-mziKbQ" base_parameter="_NMobQEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NMtTwEezEequRo9-mziKbQ" base_Classifier="_NMsFoEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NMvwAEezEequRo9-mziKbQ" base_parameter="_NMt60EezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NMyMQEezEequRo9-mziKbQ" base_parameter="_NMw-IEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NMzaYEezEequRo9-mziKbQ" base_parameter="_NMw-IEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NM1PkEezEequRo9-mziKbQ" base_parameter="_NM0BcEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NM2dsEezEequRo9-mziKbQ" base_property="_NM1PkUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NM5hAEezEequRo9-mziKbQ" base_Classifier="_NM3r0EezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NM6vIEezEequRo9-mziKbQ" base_property="_NM3ExEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NM9LYEezEequRo9-mziKbQ" base_Classifier="_NM79QEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_NM-ZgEezEequRo9-mziKbQ" value="public" base_generalization="_NM9LYUezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_NNAOsEezEequRo9-mziKbQ" header="#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;" base_class="_NDMycEezEequRo9-mziKbQ" base_Classifier="_NDMycEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_NRefAEezEequRo9-mziKbQ" base_BehavioralFeature="_NRbbsEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NRg7QEezEequRo9-mziKbQ" base_Classifier="_NRfGEEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NRjXgEezEequRo9-mziKbQ" base_Classifier="_NRhiUEezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_NRnB4EezEequRo9-mziKbQ" base_BehavioralFeature="_NRj-kUezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_NUgk4EezEequRo9-mziKbQ" base_BehavioralFeature="_NUdhkEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NUiaEEezEequRo9-mziKbQ" base_Classifier="_NUhL8EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NUjoMEezEequRo9-mziKbQ" base_parameter="_NUiaEUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NUldYEezEequRo9-mziKbQ" base_Classifier="_NUkPQEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NUmEcEezEequRo9-mziKbQ" base_parameter="_NUldYUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NUn5oEezEequRo9-mziKbQ" base_parameter="_NUmrgEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NUpu0EezEequRo9-mziKbQ" base_parameter="_NUogsEezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_NUsLEEezEequRo9-mziKbQ" base_BehavioralFeature="_NUpu0UezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NUwcgEezEequRo9-mziKbQ" base_parameter="_NUunUUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NUyRsEezEequRo9-mziKbQ" base_parameter="_NUxDkEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NU0G4EezEequRo9-mziKbQ" base_parameter="_NUy4wEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_NU-e8EezEequRo9-mziKbQ" base_operation="_NU8pwUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NVBiQEezEequRo9-mziKbQ" base_property="_NVAUIUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NVDXcEezEequRo9-mziKbQ" base_Classifier="_NVCwYEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NVFMoEezEequRo9-mziKbQ" base_Classifier="_NVElkEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NVHo4EezEequRo9-mziKbQ" base_Classifier="_NVGawEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NVI3AEezEequRo9-mziKbQ" base_property="_NVFztEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NVLTQEezEequRo9-mziKbQ" base_Classifier="_NVJeEUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NVMhYEezEequRo9-mziKbQ" base_property="_NVJeEEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NVQLwEezEequRo9-mziKbQ" base_Classifier="_NVO9oEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_NVRZ4EezEequRo9-mziKbQ" value="public" base_generalization="_NVQLwUezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_NVSA8EezEequRo9-mziKbQ" header="#define HTTPPFSTASK_H_ &#xA;#include &quot;HTTPServerTaskData.h&quot;" base_class="_NR0dQEezEequRo9-mziKbQ" base_Classifier="_NR0dQEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NVTPEEezEequRo9-mziKbQ" base_parameter="_NVSoAEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NVXggEezEequRo9-mziKbQ" base_Classifier="_NVWSYEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NVYuoEezEequRo9-mziKbQ" base_parameter="_NVXggUezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_NYKV0EezEequRo9-mziKbQ" base_BehavioralFeature="_NYH5kEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYLj8EezEequRo9-mziKbQ" base_parameter="_NYKV0UezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYOnQEezEequRo9-mziKbQ" base_parameter="_NYNZIEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_NYRDgEezEequRo9-mziKbQ" base_operation="_NYOnQUezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_NYSRoEezEequRo9-mziKbQ" base_BehavioralFeature="_NYOnQUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NYWjEEezEequRo9-mziKbQ" base_Classifier="_NYVU8EezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYXxMEezEequRo9-mziKbQ" base_parameter="_NYWjEkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NYY_UEezEequRo9-mziKbQ" base_parameter="_NYWjEkezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYa0gEezEequRo9-mziKbQ" base_property="_NYY_UUezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_NYcCoEezEequRo9-mziKbQ" header="#include &quot;Neptune.h&quot;&#xA;#include &quot;HTTPNode.h&quot;&#xA;#include &quot;CMopServer.h&quot;" base_class="_NVaj0EezEequRo9-mziKbQ" base_Classifier="_NVaj0EezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYd30EezEequRo9-mziKbQ" base_parameter="_NYcpsEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYg7IEezEequRo9-mziKbQ" base_parameter="_NYftAEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYjXYEezEequRo9-mziKbQ" base_parameter="_NYiwUEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYpeAEezEequRo9-mziKbQ" base_parameter="_NYo28EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NYqsIEezEequRo9-mziKbQ" base_parameter="_NYo28EezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NYxZ0EezEequRo9-mziKbQ" base_property="_NYvkoUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NY0dIEezEequRo9-mziKbQ" base_Classifier="_NYzPAkezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NY2SUEezEequRo9-mziKbQ" base_Classifier="_NY1rQEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NY3gcEezEequRo9-mziKbQ" base_property="_NY1EMEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NY58sEezEequRo9-mziKbQ" base_Classifier="_NY4ukEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NY7K0EezEequRo9-mziKbQ" base_property="_NY4HhEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_NY9nEEezEequRo9-mziKbQ" value="public" base_generalization="_NY9AAEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NY_cQEezEequRo9-mziKbQ" base_Classifier="_NY-OIEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_NZAqYEezEequRo9-mziKbQ" value="public" base_generalization="_NY_cQUezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_NZB4gEezEequRo9-mziKbQ" value="public" base_generalization="_NZAqYUezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_NZDGoEezEequRo9-mziKbQ" header="#define HTTPRESTSERVER_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;HTTPTree.h&quot;&#xA;#include &quot;HTTPServerTaskData.h&quot;&#xA;#include &quot;HTTPServerTask.h&quot;" base_class="_NNA1wEezEequRo9-mziKbQ" base_Classifier="_NNA1wEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_NbZ3EEezEequRo9-mziKbQ" base_BehavioralFeature="_NbWMsEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NbbFMEezEequRo9-mziKbQ" base_parameter="_NbZ3EUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NbcTUEezEequRo9-mziKbQ" base_parameter="_NbbFMUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NbdhcEezEequRo9-mziKbQ" base_parameter="_Nbc6YEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_NbfWoEezEequRo9-mziKbQ" initialisation="m_input(input), m_output(output), m_context(context), m_request(NULL)" base_operation="_NbWMsEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_Nbhy4EezEequRo9-mziKbQ" base_BehavioralFeature="_Nbf9sUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NbjBAEezEequRo9-mziKbQ" base_parameter="_NbiZ8EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_NbkPIEezEequRo9-mziKbQ" base_parameter="_NbjoEEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NbldQEezEequRo9-mziKbQ" base_parameter="_Nbk2MEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NbnScEezEequRo9-mziKbQ" base_parameter="_NbmEUEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_NbogkEezEequRo9-mziKbQ" initialisation="m_input(input), m_output(output), m_context(context), m_request(request)" base_operation="_Nbf9sUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_Nbq80EezEequRo9-mziKbQ" base_property="_NbputUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NbtZEEezEequRo9-mziKbQ" base_Classifier="_NbsK8EezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NbuAIEezEequRo9-mziKbQ" base_property="_Nbrj5EezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_Nbv1UEezEequRo9-mziKbQ" header="#define HTTPTASKDATA_H_ &#xA;#include &quot;Neptune.h&quot;" base_class="_NZDtsEezEequRo9-mziKbQ" base_Classifier="_NZDtsEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_Nd6_kEezEequRo9-mziKbQ" base_BehavioralFeature="_Nd5KYEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_Nd80wEezEequRo9-mziKbQ" base_operation="_Nd7moEezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_Nd-C4EezEequRo9-mziKbQ" base_BehavioralFeature="_Nd7moEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_Nd_4EEezEequRo9-mziKbQ" base_property="_Nd-C4UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NeBtQEezEequRo9-mziKbQ" base_property="_Nd_4FUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NeDicEezEequRo9-mziKbQ" base_property="_NeBtRUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NeEwkEezEequRo9-mziKbQ" base_property="_NeBtRUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NeHM0EezEequRo9-mziKbQ" base_property="_NeEwlUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NeIa8EezEequRo9-mziKbQ" base_property="_NeEwlUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NeKQIEezEequRo9-mziKbQ" base_property="_NeIa9UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NeK3MEezEequRo9-mziKbQ" base_property="_NeIa9UezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NeMsYEezEequRo9-mziKbQ" base_property="_NeLeREezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NeN6gEezEequRo9-mziKbQ" base_property="_NeLeREezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_NePvsEezEequRo9-mziKbQ" base_property="_NeN6hUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_NeQ90EezEequRo9-mziKbQ" base_property="_NeN6hUezEequRo9-mziKbQ"/>
  <C_Cpp:Inline xmi:id="_NeTaEEezEequRo9-mziKbQ" base_operation="_NeQ91UezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_NeXrgEezEequRo9-mziKbQ" header="#define UTILITY_H_ &#xA;#include &quot;CMopServer.h&quot;&#xA;#include &quot;Neptune.h&quot;&#xA;#define UNUSED (void)(x)" base_class="_NbwcYEezEequRo9-mziKbQ" base_Classifier="_NbwcYEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_Nisx4EezEequRo9-mziKbQ" initialisation="m_methodsSupportMask(methodsSupportMask)" base_operation="_M4_tkUezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_NivOIEezEequRo9-mziKbQ" initialisation="m_methodsSupportMask(methodsSupportMask)" base_operation="_M5IQckezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NnXPcEezEequRo9-mziKbQ" base_Classifier="_NnWBUEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_Npum8EezEequRo9-mziKbQ" base_Classifier="_NptY0EezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_NtbbMEezEequRo9-mziKbQ" initialisation="NPT_Thread()" base_operation="_NUdhkEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NtmaUEezEequRo9-mziKbQ" base_Classifier="_NtklIEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NtpdoEezEequRo9-mziKbQ" base_Classifier="_NtoPgEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NttIAEezEequRo9-mziKbQ" base_Classifier="_NtqrwEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_NydFIEezEequRo9-mziKbQ" base_Classifier="_NybP8EezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N3WzQEezEequRo9-mziKbQ" base_BehavioralFeature="_N3UXAEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N3ZPgEezEequRo9-mziKbQ" base_parameter="_N3YBYEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N3adoEezEequRo9-mziKbQ" initialisation="IHTTPHandler(segment,SUPPORT_NONE)" base_operation="_N3UXAEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N3c54EezEequRo9-mziKbQ" value="public" base_generalization="_N3cS0kezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N3eIAEezEequRo9-mziKbQ" header="#define HTTPSERVERTESTHANDLERS_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;&#xA;#define Test_UNUSED (void)(x)" base_class="_N1hAMkezEequRo9-mziKbQ" base_Classifier="_N1hAMkezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N3f9MEezEequRo9-mziKbQ" base_BehavioralFeature="_N3evEUezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N3hLUEezEequRo9-mziKbQ" initialisation="IHTTPHandler(SUPPORT_GET)" base_operation="_N3evEUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N3k1sEezEequRo9-mziKbQ" base_operation="_N3jAgkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N3n5AEezEequRo9-mziKbQ" base_parameter="_N3mq4UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N3pHIEezEequRo9-mziKbQ" base_parameter="_N3n5AUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N3puMEezEequRo9-mziKbQ" base_parameter="_N3n5AUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N3q8UEezEequRo9-mziKbQ" base_parameter="_N3qVQEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_N3tYkEezEequRo9-mziKbQ" base_Classifier="_N3sKcEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_N3umsEezEequRo9-mziKbQ" base_Classifier="_N3t_oEezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_N3wb4EezEequRo9-mziKbQ" base_Classifier="_N3vNwUezEequRo9-mziKbQ"/>
  <C_Cpp:External xmi:id="_N3yREEezEequRo9-mziKbQ" base_Classifier="_N3xC8EezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N3zfMEezEequRo9-mziKbQ" value="public" base_generalization="_N3yRE0ezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N33JkEezEequRo9-mziKbQ" header="#define HTTPSERVERTESTHANDLERS_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;&#xA;#define Test_UNUSED (void)(x)" base_class="_N3evEEezEequRo9-mziKbQ" base_Classifier="_N3evEEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N36M4EezEequRo9-mziKbQ" base_BehavioralFeature="_N33woUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N38CEEezEequRo9-mziKbQ" base_parameter="_N36z8EezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N393QEezEequRo9-mziKbQ" initialisation="IHTTPHandler(segment,SUPPORT_PUT)" base_operation="_N33woUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N4CvwEezEequRo9-mziKbQ" base_operation="_N4ATgkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N4FzEEezEequRo9-mziKbQ" base_parameter="_N4Ek8UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N4HBMEezEequRo9-mziKbQ" base_parameter="_N4FzEUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N4IPUEezEequRo9-mziKbQ" base_parameter="_N4FzEUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N4JdcEezEequRo9-mziKbQ" base_parameter="_N4IPUUezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N4L5sEezEequRo9-mziKbQ" value="public" base_generalization="_N4KrkkezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N4NH0EezEequRo9-mziKbQ" header="#define HTTPSERVERTESTHANDLERS_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;&#xA;#define Test_UNUSED (void)(x)" base_class="_N33woEezEequRo9-mziKbQ" base_Classifier="_N33woEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N4PkEEezEequRo9-mziKbQ" base_BehavioralFeature="_N4NH0kezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N4RZQEezEequRo9-mziKbQ" base_parameter="_N4QLIEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N4TOcEezEequRo9-mziKbQ" initialisation="IHTTPHandler(segment,SUPPORT_PUT)" base_operation="_N4NH0kezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N4Xf4EezEequRo9-mziKbQ" base_operation="_N4VDoUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N4ajMEezEequRo9-mziKbQ" base_parameter="_N4ZVEUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N4bxUEezEequRo9-mziKbQ" base_parameter="_N4ajMUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N4c_cEezEequRo9-mziKbQ" base_parameter="_N4ajMUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N4eNkEezEequRo9-mziKbQ" base_parameter="_N4c_cUezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N4gp0EezEequRo9-mziKbQ" value="public" base_generalization="_N4fbsEezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N4hQ4EezEequRo9-mziKbQ" header="#define HTTPSERVERTESTHANDLERS_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;&#xA;#define Test_UNUSED (void)(x)" base_class="_N4NH0UezEequRo9-mziKbQ" base_Classifier="_N4NH0UezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N4kUMEezEequRo9-mziKbQ" base_BehavioralFeature="_N4h38UezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N4mJYEezEequRo9-mziKbQ" base_parameter="_N4k7QEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N4nXgEezEequRo9-mziKbQ" initialisation="IHTTPHandler(segment,SUPPORT_GET)" base_operation="_N4h38UezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N4ro8EezEequRo9-mziKbQ" base_operation="_N4pMskezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N5JjAEezEequRo9-mziKbQ" base_parameter="_N5I78EezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N5KxIEezEequRo9-mziKbQ" base_parameter="_N5KKEEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N5LYMEezEequRo9-mziKbQ" base_parameter="_N5KKEEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N5MmUEezEequRo9-mziKbQ" base_parameter="_N5L_QEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N5ObgEezEequRo9-mziKbQ" value="public" base_generalization="_N5N0ckezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N5PpoEezEequRo9-mziKbQ" header="#define HTTPSERVERTESTHANDLERS_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;&#xA;#define Test_UNUSED (void)(x)" base_class="_N4h38EezEequRo9-mziKbQ" base_Classifier="_N4h38EezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N5Ss8EezEequRo9-mziKbQ" base_BehavioralFeature="_N5QQsUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N5VwQEezEequRo9-mziKbQ" base_parameter="_N5UiIEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N5WXUEezEequRo9-mziKbQ" initialisation="IHTTPHandler(segment,SUPPORT_POST)" base_operation="_N5QQsUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N5bP0EezEequRo9-mziKbQ" base_operation="_N5YzkkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N5eTIEezEequRo9-mziKbQ" base_parameter="_N5dFAUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N5fhQEezEequRo9-mziKbQ" base_parameter="_N5eTIUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N5gIUEezEequRo9-mziKbQ" base_parameter="_N5eTIUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N5hWcEezEequRo9-mziKbQ" base_parameter="_N5gvYEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N5jysEezEequRo9-mziKbQ" value="public" base_generalization="_N5ikk0ezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N5lA0EezEequRo9-mziKbQ" header="#define HTTPSERVERTESTHANDLERS_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;&#xA;#define Test_UNUSED (void)(x)" base_class="_N5QQsEezEequRo9-mziKbQ" base_Classifier="_N5QQsEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N5ndEEezEequRo9-mziKbQ" base_BehavioralFeature="_N5ln4EezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N5pSQEezEequRo9-mziKbQ" base_parameter="_N5oEIEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N5qgYEezEequRo9-mziKbQ" initialisation="IHTTPHandler(segment,SUPPORT_DELETE)" base_operation="_N5ln4EezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N5uKwEezEequRo9-mziKbQ" base_operation="_N5sVkkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N5xOEEezEequRo9-mziKbQ" base_parameter="_N5wnAEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N5ycMEezEequRo9-mziKbQ" base_parameter="_N5x1IEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N5zDQEezEequRo9-mziKbQ" base_parameter="_N5x1IEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N50RYEezEequRo9-mziKbQ" base_parameter="_N5zqUEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N52GkEezEequRo9-mziKbQ" value="public" base_generalization="_N51fgkezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N53UsEezEequRo9-mziKbQ" header="#define HTTPSERVERTESTHANDLERS_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;&#xA;#define Test_UNUSED (void)(x)" base_class="_N5lA0UezEequRo9-mziKbQ" base_Classifier="_N5lA0UezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N55w8EezEequRo9-mziKbQ" base_BehavioralFeature="_N537wUezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N57mIEezEequRo9-mziKbQ" base_parameter="_N56_EEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N580QEezEequRo9-mziKbQ" initialisation="IHTTPHandler(segment ,SUPPORT_ALL)" base_operation="_N537wUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N6AeoEezEequRo9-mziKbQ" base_operation="_N5-pcEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6Dh8EezEequRo9-mziKbQ" base_parameter="_N6CT0UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N6RkYEezEequRo9-mziKbQ" base_parameter="_N6Dh8UezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6SygEezEequRo9-mziKbQ" base_parameter="_N6Dh8UezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6UAoEezEequRo9-mziKbQ" base_parameter="_N6SygUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N6XD8EezEequRo9-mziKbQ" base_operation="_N6VOwEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6aHQEezEequRo9-mziKbQ" base_parameter="_N6Y5IUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N6auUEezEequRo9-mziKbQ" base_parameter="_N6aHQkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6b8cEezEequRo9-mziKbQ" base_parameter="_N6aHQkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6dKkEezEequRo9-mziKbQ" base_parameter="_N6b8cUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N6fm0EezEequRo9-mziKbQ" base_operation="_N6dxoEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6iqIEezEequRo9-mziKbQ" base_parameter="_N6iDEEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N6j4RUezEequRo9-mziKbQ" base_parameter="_N6iqIUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6kfUEezEequRo9-mziKbQ" base_parameter="_N6iqIUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6ltcEezEequRo9-mziKbQ" base_parameter="_N6lGYEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N6oJsUezEequRo9-mziKbQ" base_operation="_N6mUgEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6r0EEezEequRo9-mziKbQ" base_parameter="_N6ql8UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N6tCMEezEequRo9-mziKbQ" base_parameter="_N6r0EkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6tpQEezEequRo9-mziKbQ" base_parameter="_N6r0EkezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N6u3YEezEequRo9-mziKbQ" base_parameter="_N6tpQUezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N6wskEezEequRo9-mziKbQ" value="public" base_generalization="_N6vecEezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N6xToEezEequRo9-mziKbQ" header="#define HTTPSERVERTESTHANDLERS_H_ &#xA;#include &quot;Neptune.h&quot;&#xA;#include &quot;CMopServer.h&quot;&#xA;#define Test_UNUSED (void)(x)" base_class="_N537wEezEequRo9-mziKbQ" base_Classifier="_N537wEezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N63aQEezEequRo9-mziKbQ" base_BehavioralFeature="_N60-AEezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_N65PcEezEequRo9-mziKbQ" base_BehavioralFeature="_N63aQ0ezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N67rsEezEequRo9-mziKbQ" base_operation="_N65PckezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N6-vAEezEequRo9-mziKbQ" base_operation="_N68500ezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N7ByUEezEequRo9-mziKbQ" base_parameter="_N7AkMUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7CZYEezEequRo9-mziKbQ" base_parameter="_N7AkMUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N7E1oEezEequRo9-mziKbQ" base_operation="_N7DAcEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7H48EezEequRo9-mziKbQ" base_parameter="_N7HR4EezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N7JHEEezEequRo9-mziKbQ" base_parameter="_N7IgAEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7KVMEezEequRo9-mziKbQ" base_parameter="_N7IgAEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7N_kEezEequRo9-mziKbQ" base_parameter="_N7KVMUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N7Qb0EezEequRo9-mziKbQ" base_operation="_N7OmoEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7TfIkezEequRo9-mziKbQ" base_parameter="_N7SRAUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N7UtQkezEequRo9-mziKbQ" base_parameter="_N7TfI0ezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7VUUEezEequRo9-mziKbQ" base_parameter="_N7TfI0ezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7WicEezEequRo9-mziKbQ" base_parameter="_N7V7YEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N7YXpUezEequRo9-mziKbQ" base_operation="_N7WicUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7ba8EezEequRo9-mziKbQ" base_parameter="_N7aM0UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N7cpEkezEequRo9-mziKbQ" base_parameter="_N7ba8UezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7dQIkezEequRo9-mziKbQ" base_parameter="_N7ba8UezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7eeQkezEequRo9-mziKbQ" base_parameter="_N7d3MEezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N7g6gEezEequRo9-mziKbQ" base_operation="_N7fFUEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7jWw0ezEequRo9-mziKbQ" base_parameter="_N7ivsEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N7kk4kezEequRo9-mziKbQ" base_parameter="_N7j90EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7lzAEezEequRo9-mziKbQ" base_parameter="_N7j90EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7nBIEezEequRo9-mziKbQ" base_parameter="_N7lzAUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7o2UkezEequRo9-mziKbQ" base_parameter="_N7oPQEezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N7rSkkezEequRo9-mziKbQ" value="public" base_generalization="_N7qEeEezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N7r5okezEequRo9-mziKbQ" header="#include &quot;IHTTPHandler.h&quot;" base_class="_N6x6sUezEequRo9-mziKbQ" base_Classifier="_N6x6sUezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N7xZNkezEequRo9-mziKbQ" base_BehavioralFeature="_N7vkAkezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N7zOYkezEequRo9-mziKbQ" base_parameter="_N7yAQEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N70cgEezEequRo9-mziKbQ" base_parameter="_N7yAQEezEequRo9-mziKbQ"/>
  <C_Cpp:ConstInit xmi:id="_N71qokezEequRo9-mziKbQ" initialisation="IHTTPHandler(segment,SUPPORT_NONE)" base_operation="_N7vkAkezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_N73f1kezEequRo9-mziKbQ" base_BehavioralFeature="_N71qsEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N76jIEezEequRo9-mziKbQ" base_parameter="_N758EEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N77xQ0ezEequRo9-mziKbQ" base_parameter="_N77KMEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N78_YEezEequRo9-mziKbQ" base_parameter="_N77KMEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N7-NhkezEequRo9-mziKbQ" base_parameter="_N78_ZUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8BQ0EezEequRo9-mziKbQ" base_parameter="_N8ApwEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N8Ce9UezEequRo9-mziKbQ" base_parameter="_N8B34EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8DtFkezEequRo9-mziKbQ" base_parameter="_N8B34EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8E7MUezEequRo9-mziKbQ" base_parameter="_N8DtHEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8IlkkezEequRo9-mziKbQ" base_parameter="_N8HXeUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N8JztUezEequRo9-mziKbQ" base_parameter="_N8IllUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8KaxEezEequRo9-mziKbQ" base_parameter="_N8IllUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8Lo6EezEequRo9-mziKbQ" base_parameter="_N8LB0EezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8OsMEezEequRo9-mziKbQ" base_parameter="_N8OFIEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N8P6UEezEequRo9-mziKbQ" base_parameter="_N8OsMUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8RIcEezEequRo9-mziKbQ" base_parameter="_N8OsMUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8RvgEezEequRo9-mziKbQ" base_parameter="_N8RIcUezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N8S9oEezEequRo9-mziKbQ" value="public" base_generalization="_N8SWkUezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N8ULwEezEequRo9-mziKbQ" header="#include &quot;IHTTPHandler.h&quot;" base_class="_N7sgskezEequRo9-mziKbQ" base_Classifier="_N7sgskezEequRo9-mziKbQ"/>
  <standard:Create xmi:id="_N8ZrUEezEequRo9-mziKbQ" base_BehavioralFeature="_N8XPEEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N8d8wEezEequRo9-mziKbQ" base_parameter="_N8cuoEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N8ej0EezEequRo9-mziKbQ" base_parameter="_N8cuoEezEequRo9-mziKbQ"/>
  <standard:Destroy xmi:id="_N8hAEEezEequRo9-mziKbQ" base_BehavioralFeature="_N8fK4UezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N8iOMEezEequRo9-mziKbQ" base_property="_N8hAEUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N8l4kEezEequRo9-mziKbQ" base_operation="_N8jcVEezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N8tNUEezEequRo9-mziKbQ" base_parameter="_N8r_M0ezEequRo9-mziKbQ"/>
  <C_Cpp:Ptr xmi:id="_N8ubcEezEequRo9-mziKbQ" base_parameter="_N8tNUUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N8wQoEezEequRo9-mziKbQ" base_operation="_N8ubcUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8zT8EezEequRo9-mziKbQ" base_parameter="_N8yF0UezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N8z7AEezEequRo9-mziKbQ" base_parameter="_N8zT8UezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N81JIEezEequRo9-mziKbQ" base_parameter="_N8zT8UezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N82XQEezEequRo9-mziKbQ" base_parameter="_N81JIUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N84McEezEequRo9-mziKbQ" base_operation="_N82XQUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N87PwEezEequRo9-mziKbQ" base_parameter="_N86BoUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N88d4EezEequRo9-mziKbQ" base_parameter="_N87PwUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N89sAEezEequRo9-mziKbQ" base_parameter="_N87PwUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N8-6IEezEequRo9-mziKbQ" base_parameter="_N89sAUezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N9AvUEezEequRo9-mziKbQ" base_operation="_N8-6IUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N9EZsEezEequRo9-mziKbQ" base_parameter="_N9DLkUezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N9Fn0EezEequRo9-mziKbQ" base_parameter="_N9EZsUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N9GO4EezEequRo9-mziKbQ" base_parameter="_N9EZsUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N9HdAEezEequRo9-mziKbQ" base_parameter="_N9G18EezEequRo9-mziKbQ"/>
  <C_Cpp:Virtual xmi:id="_N9J5QEezEequRo9-mziKbQ" base_operation="_N9HdAUezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N9MVgEezEequRo9-mziKbQ" base_parameter="_N9LucEezEequRo9-mziKbQ"/>
  <C_Cpp:Const xmi:id="_N9OKsEezEequRo9-mziKbQ" base_parameter="_N9M8kEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N9OxwEezEequRo9-mziKbQ" base_parameter="_N9M8kEezEequRo9-mziKbQ"/>
  <C_Cpp:Ref xmi:id="_N9P_4EezEequRo9-mziKbQ" base_parameter="_N9PY0EezEequRo9-mziKbQ"/>
  <C_Cpp:Visibility xmi:id="_N9ROAEezEequRo9-mziKbQ" value="public" base_generalization="_N9P_4UezEequRo9-mziKbQ"/>
  <C_Cpp:Include xmi:id="_N9R1EEezEequRo9-mziKbQ" header="#include &quot;IHTTPHandler.h&quot;" base_class="_N8Uy0EezEequRo9-mziKbQ" base_Classifier="_N8Uy0EezEequRo9-mziKbQ"/>
</xmi:XMI>
